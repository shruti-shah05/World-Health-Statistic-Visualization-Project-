<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.21.0108.1605                               -->
<workbook original-version='18.1' source-build='2020.2.10 (20202.21.0108.1605)' source-platform='win' version='18.1' xml:base='https://prod-useast-b.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='newData_1' path='/t/shruts05/workbooks' revision='1.0' site='shruts05' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
    <color-palette custom='true' name='My Sequential Palette 3' type='ordered-sequential'>
      <color>#f0f9e8</color>
      <color>#bae4bc</color>
      <color>#7bccc4</color>
      <color>#43a2ca</color>
      <color>#0868ac</color>
    </color-palette>
    <color-palette custom='true' name='My Sequential Palette 8' type='ordered-sequential'>
      <color>#ffffb2</color>
      <color>#fecc5c</color>
      <color>#fd8d3c</color>
      <color>#f03b20</color>
      <color>#bd0026</color>
    </color-palette>
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='d1cfab3b-4f52-443f-a3e3-aa3ded7 (NewDataLifeExpectancy) (4)' inline='true' name='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NewDataLifeExpectancy' name='excel-direct.0kqilzy05aunbq14jaglb1wmdys8 (copy 3)'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/shruti/Desktop/DSC 465/NewDataLifeExpectancy.xlsx' interpretationMode='1' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kqilzy05aunbq14jaglb1wmdys8 (copy 3)' name='d1cfab3b-4f52-443f-a3e3-aa3ded7' table='[&apos;d1cfab3b-4f52-443f-a3e3-aa3ded7$&apos;]' type='table'>
          <columns gridOrigin='A1:Q10001:no:A1:Q2147483647:1' header='yes' lost='0' outcome='1' processed='99468'>
            <column datatype='date' date-parse-format='yyyy' name='Years' ordinal='0' />
            <column datatype='string' name='Country Name' ordinal='1' />
            <column datatype='string' name='Country Code' ordinal='2' />
            <column datatype='real' name='Life expectancy at birth, female (years)' ordinal='3' />
            <column datatype='real' name='Life expectancy at birth, male (years)' ordinal='4' />
            <column datatype='real' name='Lifetime risk of maternal death' ordinal='5' />
            <column datatype='real' name='Life expectancy at birth, total (years)' ordinal='6' />
            <column datatype='real' name='Adolescent fertility rate (births per 1,000 women ages 15-19)' ordinal='7' />
            <column datatype='real' name='Fertility rate, total (births per woman)' ordinal='8' />
            <column datatype='integer' name='Compulsory education, duration (years)' ordinal='9' />
            <column datatype='real' name='Current health expenditure per capita, PPP (current international $)' ordinal='10' />
            <column datatype='real' name='Mortality rate, adult, female (per 1,000 female adults)' ordinal='11' />
            <column datatype='real' name='Mortality rate, adult, male (per 1,000 male adults)' ordinal='12' />
            <column datatype='real' name='Mortality rate, under-5, male (per 1,000 live births)' ordinal='13' />
            <column datatype='real' name='Mortality rate, under-5, female (per 1,000 live births)' ordinal='14' />
            <column datatype='real' name='Mortality rate, infant, male (per 1,000 live births)' ordinal='15' />
            <column datatype='real' name='Mortality rate, infant, female (per 1,000 live births)' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q2147483647:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>99468</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Years]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Years</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, female (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, female (years)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Life expectancy at birth, female (years)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, male (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, male (years)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Life expectancy at birth, male (years)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lifetime risk of maternal death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lifetime risk of maternal death]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Lifetime risk of maternal death</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth, total (years)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth, total (years)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Life expectancy at birth, total (years)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adolescent fertility rate (births per 1,000 women ages 15-19)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adolescent fertility rate (births per 1,000 women ages 15-19)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Adolescent fertility rate (births per 1,000 women ages 15-19)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fertility rate, total (births per woman)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fertility rate, total (births per woman)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Fertility rate, total (births per woman)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Compulsory education, duration (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Compulsory education, duration (years)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Compulsory education, duration (years)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Current health expenditure per capita, PPP (current international $)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Current health expenditure per capita, PPP (current international $)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Current health expenditure per capita, PPP (current international $)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, adult, female (per 1,000 female adults)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate, adult, female (per 1,000 female adults)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Mortality rate, adult, female (per 1,000 female adults)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, adult, male (per 1,000 male adults)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate, adult, male (per 1,000 male adults)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Mortality rate, adult, male (per 1,000 male adults)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, under-5, male (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate, under-5, male (per 1,000 live births)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Mortality rate, under-5, male (per 1,000 live births)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, under-5, female (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate, under-5, female (per 1,000 live births)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Mortality rate, under-5, female (per 1,000 live births)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, infant, male (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate, infant, male (per 1,000 live births)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Mortality rate, infant, male (per 1,000 live births)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality rate, infant, female (per 1,000 live births)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality rate, infant, female (per 1,000 live births)]</local-name>
            <parent-name>[d1cfab3b-4f52-443f-a3e3-aa3ded7]</parent-name>
            <remote-alias>Mortality rate, infant, female (per 1,000 live births)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name (group)-1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country Name]' new-bin='true'>
          <bin default-name='true' value='&quot;Australia, Germany, Hong Kong SAR, China and 8 more&quot;'>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Hong Kong SAR, China&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;New Caledonia&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country Name (group)-2]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country Name]' new-bin='true'>
          <bin default-name='true' value='&quot;Burundi, Chad, Liberia and 6 more&quot;'>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column datatype='real' hidden='true' name='[Current health expenditure per capita, PPP (current international $)]' role='measure' type='quantitative' />
      <column datatype='string' name='[DEVELOPED-COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;China, Germany, India and 2 more&quot;'>
            <value>&quot;China&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Life Exp. Female ' datatype='real' name='[Life expectancy at birth, female (years)]' role='measure' type='quantitative' />
      <column caption='Life Exp. Male ' datatype='real' name='[Life expectancy at birth, male (years)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Lifetime risk of maternal death]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mortality rate, adult, male (per 1,000 male adults)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mortality rate, infant, female (per 1,000 live births)]' role='measure' type='quantitative' />
      <column datatype='string' name='[UNDER-DEVLOPED-COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country Name]' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan, Angola, Bangladesh and 2 more&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='date' name='[Years]' role='dimension' type='ordinal' />
      <column-instance column='[Life expectancy at birth, total (years)]' derivation='Attribute' name='[attr:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, female (years)]' derivation='Avg' name='[avg:Life expectancy at birth, female (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, male (years)]' derivation='Avg' name='[avg:Life expectancy at birth, male (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, total (years)]' derivation='Avg' name='[avg:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Life expectancy at birth, female (years)]' derivation='None' name='[none:Life expectancy at birth, female (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, male (years)]' derivation='None' name='[none:Life expectancy at birth, male (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, total (years)]' derivation='None' name='[none:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, female (years)]' derivation='Sum' name='[sum:Life expectancy at birth, female (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, male (years)]' derivation='Sum' name='[sum:Life expectancy at birth, male (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth, total (years)]' derivation='Sum' name='[sum:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mortality rate, adult, male (per 1,000 male adults)]' derivation='Sum' name='[sum:Mortality rate, adult, male (per 1,000 male adults):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mortality rate, infant, female (per 1,000 live births)]' derivation='Sum' name='[sum:Mortality rate, infant, female (per 1,000 live births):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Years]' derivation='Year-Trunc' name='[tyr:Years:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Years]' derivation='Year' name='[yr:Years:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country Code,Country Name,YEAR(Years),YEAR(Years))' hidden='true' name='[Action (Country Code,Country Name,YEAR(Years),YEAR(Years))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Code]' />
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='level-members' level='[yr:Years:ok]' />
          <groupfilter function='level-members' level='[tyr:Years:ok]' />
        </groupfilter>
      </group>
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Country Name]' member='&quot;Andorra&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Angola&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Antigua and Barbuda&quot;' />
          <groupfilter function='member' level='[Country Name]' member='&quot;Arab World&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[attr:Life expectancy at birth, total (years):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[sum:Life expectancy at birth, total (years):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, female (years):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, female (years):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[sum:Life expectancy at birth, female (years):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[sum:Mortality rate, infant, female (per 1,000 live births):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, male (years):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, male (years):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[sum:Life expectancy at birth, male (years):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[sum:Mortality rate, adult, male (per 1,000 male adults):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country Name (group)-1]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia, Germany, Hong Kong SAR, China and 8 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[DEVELOPED-COUNTRY]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China, Germany, India and 2 more&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Country Name:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>%null%</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg_LifeExpectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#1b1b1b' fontsize='12'>Avg Life Expectancy from 1960-2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='d1cfab3b-4f52-443f-a3e3-aa3ded7 (NewDataLifeExpectancy) (4)' name='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)'>
            <column datatype='real' name='[Adolescent fertility rate (births per 1,000 women ages 15-19)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='USA' />
              </aliases>
            </column>
            <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column-instance column='[Adolescent fertility rate (births per 1,000 women ages 15-19)]' derivation='Avg' name='[avg:Adolescent fertility rate (births per 1,000 women ages 15-19):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='Avg' name='[avg:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' direction='DESC' using='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Adolescent fertility rate (births per 1,000 women ages 15-19):qk]' />
          <slices>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' value='bold' />
            <format attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' value='#9d7660' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' num-steps='5' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' value='#f17b79' />
            <format attr='font-weight' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' />
              <size column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' />
              <text column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' />
              <text column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='11' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2F42A048-169E-4DA1-B360-61FC502EA0FF}' />
    </worksheet>
    <worksheet name='Developed_Countries '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>DEVELOPED COUNTRIES from 1960-2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='d1cfab3b-4f52-443f-a3e3-aa3ded7 (NewDataLifeExpectancy) (4)' name='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='USA' />
              </aliases>
            </column>
            <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Years]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='None' name='[none:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Years]' derivation='Year-Trunc' name='[tyr:Years:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' scope='rows' value='LifeExpectancy at birth' />
            <encoding attr='space' class='0' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' field-type='quantitative' max='90.0' min='25.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:qk]' scope='cols' value='Years' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='Developed Countries' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' value='normal' />
            <format attr='font-size' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' />
              <lod column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='off' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='4' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]</rows>
        <cols>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:qk]</cols>
        <page-trail-options enabled='true' mark-color='#f28e2b' mark-color-auto='false' mark-type='highlighted' size='5' trail-effect='none' />
      </table>
      <simple-id uuid='{B4928937-8BA9-4A9F-BDEF-3973F81F9B22}' />
    </worksheet>
    <worksheet name='LifeExpectancy_1900s'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Life Expectancy 1900s</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='d1cfab3b-4f52-443f-a3e3-aa3ded7 (NewDataLifeExpectancy) (4)' name='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='USA' />
              </aliases>
            </column>
            <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Years]' role='dimension' type='ordinal' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='Avg' name='[avg:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Years]' derivation='Year-Trunc' name='[tyr:Years:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Years]' derivation='Year-Trunc' name='[tyr:Years:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1960-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1961-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1962-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1963-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1964-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1965-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1966-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1967-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1968-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1969-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1970-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1971-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1972-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1973-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1974-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1975-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1976-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1977-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1978-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1979-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1980-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1981-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1982-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1983-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1984-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1985-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1986-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1987-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1988-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1989-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1990-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1991-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1992-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1993-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1994-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1995-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1996-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1997-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1998-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#1999-01-01 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Latitude (generated)]</column>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Longitude (generated)]</column>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' num-steps='25' palette='My Sequential Palette 8' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' value='Avg. Life expectancy &#10;at birth, total (years)' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Years'>
              <formatted-text>
                <run>Years</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' />
              <color column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' />
              <lod column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:qk]' />
              <tooltip column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' />
              <geometry column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Years:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Life expectancy at birth, total (years):	</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='9' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='254' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Latitude (generated)]</rows>
        <cols>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' size='5' trail-effect='none' />
      </table>
      <simple-id uuid='{249FBC28-582C-4A7B-88E9-314096229FA0}' />
    </worksheet>
    <worksheet name='LifeExpectancy_2000s '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Life Expectancy 2000s</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='d1cfab3b-4f52-443f-a3e3-aa3ded7 (NewDataLifeExpectancy) (4)' name='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='USA' />
              </aliases>
            </column>
            <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Years]' role='dimension' type='ordinal' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='Avg' name='[avg:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Years]' derivation='Year-Trunc' name='[tyr:Years:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Years]' derivation='Year-Trunc' name='[tyr:Years:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2000-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2001-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2002-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2003-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2004-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2005-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2006-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2007-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2008-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2009-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2010-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2011-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2012-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2013-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2014-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2015-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2016-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2017-01-01 00:00:00#' />
              <groupfilter function='member' level='[tyr:Years:ok]' member='#2018-01-01 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Latitude (generated)]</column>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Longitude (generated)]</column>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' num-steps='15' palette='My Sequential Palette 3' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' value='Avg. Life expectancy &#10;at birth, total (years)' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' />
              <lod column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' />
              <color column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' />
              <lod column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:qk]' />
              <geometry column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Years:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Life expectancy at birth, total (years):	</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-size' value='9' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Latitude (generated)]</rows>
        <cols>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:ok]</column>
        </pages>
        <page-trail-options enabled='true' mark-type='all' size='5' trail-effect='none' />
      </table>
      <simple-id uuid='{9A505BF2-A306-415F-A345-40776F7B5B21}' />
    </worksheet>
    <worksheet name='Underdeveloped_Countries '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>UNDER DEVLOPED COUNTRIES from 1960-2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='d1cfab3b-4f52-443f-a3e3-aa3ded7 (NewDataLifeExpectancy) (4)' name='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0y309v712b1eeu18h6inj1278qwd (copy 3)'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United States&quot;' value='USA' />
              </aliases>
            </column>
            <column datatype='real' name='[Life expectancy at birth, total (years)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Years]' role='dimension' type='ordinal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Life expectancy at birth, total (years)]' derivation='None' name='[none:Life expectancy at birth, total (years):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Years]' derivation='Year-Trunc' name='[tyr:Years:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' scope='rows' value='Life Expectancy at  birth' />
            <encoding attr='space' class='0' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' field-type='quantitative' max='90.0' min='25.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:qk]' scope='cols' value='Years' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='8' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' value='Underdeveloped Countries' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-weight' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' value='normal' />
            <format attr='font-size' field='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='6' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]</rows>
        <cols>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:qk]</cols>
        <page-trail-options enabled='true' mark-color='#f28e2b' mark-color-auto='false' mark-type='highlighted' size='5' trail-effect='none' />
      </table>
      <simple-id uuid='{375C5A1F-C73A-43D8-B9B5-2537E43DEF85}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Final_Dashboard (2)'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='7' param='horz' type='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='5' type='layout-basic' w='89000' x='500' y='889'>
              <zone h='24556' id='3' name='Developed_Countries ' w='44500' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='10' name='Avg_LifeExpectancy' w='44500' x='45000' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='11' name='LifeExpectancy_1900s' w='44500' x='500' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49111' id='14' name='LifeExpectancy_2000s ' w='44500' x='45000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24555' id='15' name='Underdeveloped_Countries ' w='44500' x='500' y='25445'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98222' id='6' is-fixed='true' param='vert' type='layout-flow' w='10000' x='89500' y='889'>
              <zone h='15000' id='8' name='Developed_Countries ' pane-specification-id='4' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' type='color' w='10000' x='89500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15000' id='44' name='Underdeveloped_Countries ' pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' type='color' w='10000' x='89500' y='15889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10445' id='12' name='LifeExpectancy_1900s' pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' type='color' w='10000' x='89500' y='30889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone count='1' h='13222' id='47' name='LifeExpectancy_1900s' name1='Final_2000s' synchronized='1' type='currpage' w='10000' x='89500' y='41334'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10445' id='45' name='LifeExpectancy_2000s ' pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' type='color' w='10000' x='89500' y='54556'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='63' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='62' param='vert' type='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='213' h='24556' id='3' is-fixed='true' name='Developed_Countries ' w='44500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15000' id='8' name='Developed_Countries ' pane-specification-id='4' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' type='color' w='10000' x='89500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='10' is-fixed='true' name='Avg_LifeExpectancy' w='44500' x='45000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='213' h='24555' id='15' is-fixed='true' name='Underdeveloped_Countries ' w='44500' x='500' y='25445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15000' id='44' name='Underdeveloped_Countries ' pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' type='color' w='10000' x='89500' y='15889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='11' is-fixed='true' name='LifeExpectancy_1900s' w='44500' x='500' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10445' id='12' name='LifeExpectancy_1900s' pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' type='color' w='10000' x='89500' y='30889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49111' id='14' is-fixed='true' name='LifeExpectancy_2000s ' w='44500' x='45000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10445' id='45' name='LifeExpectancy_2000s ' pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' type='color' w='10000' x='89500' y='54556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='13222' id='47' name='LifeExpectancy_1900s' name1='Final_2000s' synchronized='1' type='currpage' w='10000' x='89500' y='41334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0D81A697-C110-4F91-9CD7-F7B4CDAB614B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Developed_Countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[DEVELOPED-COUNTRY]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[Set 1]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[UNDER-DEVLOPED-COUNTRY]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[io:Set 1:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Code:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, total (years):qk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tqr:Years:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72982D83-3E52-4C96-9AF2-DB8FE8B1B597}' />
    </window>
    <window class='worksheet' name='Underdeveloped_Countries '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Code:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE161D40-E207-4B56-A8D7-A189A67302C6}' />
    </window>
    <window class='worksheet' name='Avg_LifeExpectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='192'>
            <card pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Life expectancy at birth, female (years):qk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[sum:Compulsory education, duration (years):qk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[tyr:Years:qk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[yr:Years:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A7A234AF-D50D-4851-8A0C-CFB5B65FA3B1}' />
    </window>
    <window class='worksheet' name='LifeExpectancy_1900s'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#1960-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Code:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[yr:Years:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{272FA691-D691-44EB-8EC8-625061230D3B}' />
    </window>
    <window class='worksheet' name='LifeExpectancy_2000s '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2000-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[avg:Life expectancy at birth, total (years):qk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Code:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</field>
            <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[yr:Years:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB374ED7-A3A7-48BF-89F1-67CE1CEE7943}' />
    </window>
    <window class='dashboard' maximized='true' name='Final_Dashboard (2)'>
      <viewpoints>
        <viewpoint name='Avg_LifeExpectancy' />
        <viewpoint name='Developed_Countries '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='LifeExpectancy_1900s'>
          <current-page>
            <multibucket>
              <bucket>#1960-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='LifeExpectancy_2000s '>
          <current-page>
            <multibucket>
              <bucket>#1960-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Underdeveloped_Countries '>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0y309v712b1eeu18h6inj1278qwd (copy 3)].[none:Country Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{5AD83B6E-23A4-475C-8C1C-E9DFF6802B1F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg_LifeExpectancy' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Developed_Countries ' width='192'>
      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
      BZJ0Nf8fzC0OdH+vjrUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Final_Dashboard (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3gcx5Wo/XZP9+SAnAGCBEFSDGJUFiVbVnaUnOQop5XjOuzevV7v+u5S
      a/tzXNmW7bUtrWUFy8o5S1QgJZKiRDCABEkQAImcB4PJ09Pp+9EDgCAJEiTAPO/zzDM93T1d
      1VXnnDp1qrtKME3TJEuWsxTxZGcgS5aTSVYBspzVZBUgy1lNVgGynNVkFSDLWY1t1apVq052
      JibLmhefYPXad8gvrUJKDnD3/Q9Rt20PTiGFM68MLdTFvoEkrz/zd9ZtrCO3dBb7mnZRWlqK
      qaV4+rGH2d0+yJzZM3n12Ud47a13KayoZuubL/Dya2+iST7adqznpdfXk1tcQa7fA8D2d9fy
      3CtrmbNgMVveeonX1m9m5uw57N6+jYLSUpq3bcZRkMszj7/IOfPnsH1bPc073uHF1Wuo27kX
      HzEee/p5kqaDqjyZjQ0dRLp288SzL9IdSpErp3no0ccxnTmUFuYS7W/jz395lMUXLEOaZNm0
      Nzewu3WQitIC3njxKTbv6WZe7Uyat7/Lk8+9woza+ex85zXWb9vLvLk1CEAk2MMjjzxCRLdT
      muvgoQcfRPQWkO9z8MbLz5FTOQ8t3M2DDz1CUnBRWVJw3Or2ZHFatQDNnUFu/vRHeeBv9xAd
      6KB8waXc8qVP4RMTrNu8h/Vr38AVyCWShltuuYVZZbls3rIZgNVPPETFsiuY7Y3y4tu7aOuJ
      8IXPfoynH3+U5s4gt9xyCxcsnsPuth6++LlP8uj996EBka5dvLUrxOduupFQyyYaBiQ+fNUF
      3P/gY9Rv3oIGNNVvJqalePfl53l7dxfb67dzyZUfJK2muOVzH6epfjsf+tw/sHndq+ipYTbW
      N7GzbjefuOUWPnjlJTz++ONc9cEbqSoKAPDkg/cwlDSpr6/n7ddfoGcgyN/uvostu/axc8sm
      Hnv477zw4ovcfd9DKLpVNgPD3dRv2km4bRudagHlYj/rt+7i4WfXsnzFChypbjY2RajxRHiz
      vgOARDLNhz/xGd5Z8xLPPfoIF197A6ufe5LBvm7aWnYynIKt69eSUzGbDW++fhJq/PhzWikA
      gOz0UuT3oAGvv/AEd9z3CFULL6B75ya6IhpVOXZaGuq44447aB+Ijf5vYFhhTnUJc+bOpbev
      n6HuFv7yl3tYdtHlRPrbuOOOO6jbuRcAye6mLOBDAYYH+qiunYfs9BAfHmRWbS2BwipELQqm
      iQmMDKUsWnktjW+/eohcq/zh56twFc/GNrovwb133MGLazbymc/dzJrnHuG5N94BYPny5Xzw
      Ex+n8d31+CsX8tYLT3H1Rz/FuteeZ2d9A+/5wEdoa22n2pegO2pdbfmK8xABX+ls4m2b2bit
      kf7WRmKGTO+ed3n6lXXklZZTUVFOx56t3HHXA+Tk5/LIfXfxvg98jKEUlBcGcLodFFfMpKok
      HwDN5sBrF3G63NNck6cGp5UCRPrb+PMf/wdbbjnyyE5VQxOdOPQ+ZF/ZuPM1VaWt0arsS9+z
      gj/cdhu/+euTXHXpCvLKavjqN77JRYtr9ztfIzHUzZ//9EcUXyEeoHLBeexZ9xR//vOfyJt7
      Ae++cD+//+1tzFmykiULKvndr29na0+SAieAjUsWVLCldfCAnMt89bv/jNLfwlA8Pe6Iqmps
      XLeWuGIgCgf8zelj/uxK5syq4P6770Jw5YEo4XG78flcyHLGQdJi3HXHvbxb9xbbW7txyU5S
      opfLr76OGe4UO/f2cs7yS+jZ+hr/+8hrvPfKq7jlS5/ilYfvoTuqU1dXx6XLZvPr236LKeew
      Z9tGXnmrjocfeADZbmPH9noSI03NGYaQHQnOcjZzWrUAWbJMN1kFyHJWc0QF6OnpPqoLZj2q
      LKcTR1QAh8N5VBc0DOOYM5Mly4lm4nEWUyOpGLS1tZKXl3cCs5Qly9T59ztfY8e+/iOeN6EC
      JPubqR8KoERjhzhqsrepEZs7B49NZzipM3tm1VTym+UMwTBMNN1A1XRU3UDTDRRVQ1Wt7ZF9
      hmGgGyZpTUfTDUzTRNUMRjxoVRsLuyqqhqLqzKnMZ8nskmnN74QK4CqaQ3TTU7hLag9xVCc8
      HMOWBs0h4wKSpondsG4s2w84tTEMk5Sqk0ipxBWVeFJFUTUSKY1UWiWhaCRTKmlNJ5XWSCgq
      iZRKUtEwMUmndWufomaE1txPsI+u7kVBwOWQSKRURv4pAJJtvHeu6QafuWohC6snfhxDkib7
      4Mh+/5noQGqwGcVTSbn/ECOAehrJnQtGAlWzdtkEAZvNGucc+c5ydKRVS7BSaQ0lrZFQLIE0
      TUsA4sk00WSaeEo96L9mxpqm0hrxVJp4UiWeSo9aWSWtk1RUFNU650iIojAqzIIANlFEsoko
      qsZk7JsoCthEAckmIgoCsmTJhF0akw3JJhLwOrCJIoZpEk9ag4Qelx1RGD8qaJgmhTneoxZy
      0zRp3fwK1cuuQhAOHGk8jAKIzjzCnRtpiBZzTu2s8QdtborzHEjuYtySwXBCx35U2Tp90XVj
      nFVUVEuw0pqOolqClkqrpDVj1Ioqqo6qWRY3rekkM4KtZKywkhH8A62nmBGgtDrmDggCOO0S
      SWViIXbaJbwuO26njGQTccgSDlnC73EgCiBlDJQsidglG7JsG91vywiuPXO+xymPCqMoCjhk
      Cbss4nbIOO3SqGDbRAG3Ux7dr+kGybRmKd1+LUYqrZFIqaNlmFK00W2fy05CUSdUMNtBQ+VH
      JhbsIjHcT2yoh1iwi0BRNfHhPgZbd5BbXjuxAmiJQXoiGjU5hx4CLyqtGN0u8Rx1vk4KI8Ib
      TaZJpFSiCYV4yhLkaDJNLKFkrK6WafLHKi2WTGcE98jWUxBAlmy47BIuh4zDbsMhS7jsEnbZ
      Ro7PicvuxSHbkCUbdsmG0yHhkK3zHHYbkk1EEITMf6z/GqaJouoYhjH6P0kSR9P0uRy4HGNC
      OVkMwySpqCQPuO+koo0q60iZjLQg+2+DZaH3t9oO2YbTLuF2yjhkGy6HjNtpKYfbIeP3OEaV
      ZeQ8V2bbZpu+4am+5i2YpkFf82Zskh1vbimqkkCw2TB0bWIFcOaUcf17LqQvnJi2zLyzq4sN
      DZ2ktUMr1f7W6UDskkhaGwuxGqbV2Rr9rVudqhGszpdleeLJNLFkepx1EUUBu2QbFcIRIXXa
      xwQxx+ekrMBnVaZDHq1Uhyzhckijlee0W0Lrso9VqHgM1upIqJqOsV/HMa0ZKGkNNdPK9Ifi
      GffJum9F1Ykn06MWNpmy/Pu0po8TVkEAhyzhcVkW3O2QcWWE1WWXyPW5rG3HiDDvvy0fJsfT
      i2GYR12uTn8+sy/8IF0N6zAMna5dG8grrwXTco8mVICd775Bi1KEmRyecsZHGBiOEwwnMtZL
      RJKs5lmyWf7lSHM88tuWEVKwKsnttApbsolE4gqRRBqPUybX58TrcmT8TctfFUUBu2xDyCiV
      XRLHpTMVK2MY5qivHU1YPnkwkiCeVMcJnprxyZNpDU0zSGs6aVUfp6hHw0iZyBnLb8+Uo13O
      KK19TIH9HgcO2YbHac8IrzS6bZdPXB9tpKwiCWVcqxvL9GXiyXSmxdFIKSrxlIpumAe1KADX
      nl/DysUzjir9ivkXA1C+4JJx+4tqlgCH6QOUz6hBS+VR4D66BA/H+y+aw/svmjNt15tuogmF
      YDjJYCTBUCTJcCxFOJYiFE0RSSijrceIH+5x2fE6ZbxuR6Zpl8YJnl2yYc9YzBGXxSFPTflO
      JkpaI54R4kgiTSypEE+qRBJKxiApxDIGYUSA9y8rn8s+2q/wOO3kFjpHldLjsmdcxqN34abC
      hArg9vrYV99Au2hQUV560PHocJCEJhJw2RhO6JQU5h7XjE4HaVWnJxilZyhG92CU/lCc/lCc
      ZFpDFAS8LjsFARd5fhd5PhdzK/MJeJzk+Jz43Y7j4tacaA4U4mTGRYwm00TiCklFJZZSiSXS
      B/V3HLINj0vG63KMCrLPZaeqOIDfbe3zuex4XKdOSKS9fg3J8ACFM88FAUJdTcw67zoEQaRz
      x1sTK4DsycPQFJYvXXSIoxo7tu+ieu45tHb0IQPpwtxTJhKkajpdA1FaukO09w3T0R8hmdZw
      yDZK8ryUFfioLPKzfE4pRbmeE+rHTheGYRJPpTPWN20J9H5WeDieIpYY6/cYmebLZZfGCbE7
      4xoV5XqoKcvF47RnjttPy3I5kKpzL6e78R1sdiftW1+lfMGlWCMNEO5rnVgB0rFBOnt6MU2T
      qqoDR3k1PP5CwkMDyJKME9BNE/0kDYQlFZXte/vZ1TZIc1cISRKpKgowszSXSxZVUlHoGxd/
      PhBNO3Jk53hjGCaxVJrhaIpwXCGeTDMcVwjHLPcrHFOIJRU0w3ItRFEcjaYEPJYw+90OqooD
      eDOumccl43XaOUT4e1KcCuVyNBxqjMA0DWLBLoprlmAYBoNtO5CdHrx5pZTNu2BiBbDZPZQX
      5uHPOdRzQE6qZ5YiiuKosLsEAU7QQFg0obChoZO6xh4KAi58HgfnVBWwcnE1n792yQnzIdOq
      blnhuBU+HfGJ46mxDl5C0YhnOnw2UcCVcRs8TtmKeAmACTabkOnQu/C67AR8bgI+N6IAHqed
      gNeB12U/of7xmUBkoIPimmXYJDuB4hkkw4MIgkB0sJPB9p0TK4CaCBFJmQQb69lcUMCyheM7
      r36//7hnfn+UtMamPT28vnkfiqpz/jnlfPVDy8nzu6YtjRG3IhRNMZzp/A5Fk0TjCqFMh1jZ
      b1BKlsTRzp0n0xkeEeKKQj8epx2X03Ix3A75hEZfslgEisaCONVLrxx3zF9YeZgWwJXH5Zdd
      Qniw5yDhP1EYhsmOff2srttLfyjOBfMr+NqHV1AQOPoXtNOqTiiWIhhOMDCcYCiaZCiSJBhO
      EIqlAGuk0eO0k+uzOr65XiflBT4CMwrI8bnI8Thw2I/+eZMspy4TPwphE1n7wiPkzzyXZScw
      Q2lVZ1tLLxt3dtETjDGvKp8bV55DdWnOYf8TjCQYDFsCPRBOMBxN0heKE0+piIL1SEGe30W+
      34ryVBT6OHdWEXl+FwGP84yI8GQ5eiZUgIFQgus/fAPptHLcEtd1g4Fwgn09IVq6QjR3DaHp
      BvNnFHL9hbXMKssdjc1v3tPDYDhBMJwctd7xlPXwlNMuURBwkx9wk+dzMrM0h4K5ZeQHXPjc
      juOW/yynPxMqwKa315LUQHL5qKw8xGCYoREcjuNxCJMeB1iztY1XNrVgmpBQrFgzgM9jJ8fj
      pCDgRlE1drYNsD3zMoPf7SDX56Qwx02O18X86gIKctzk+VxnRJguy8llQgVYcf5FbHhnC3Nq
      DvU+ALTu3UtMBUkwJj0OkFRUVE1HstkIeBzUlOWS47UEf8Q9yfW5yPFmXZIsJ4YJFSBXThE2
      PQz2d8OCeeOOGek4PYPDJJQ01eWlkx4HuHJ5NVcurz5ipgxDJ/tqcZajZVpfiBmIKMyrzKe0
      vPKgY6Ldw0UXnk8wGMRUUwwn9RM6DpAly3QxoQK07NrKsLMGUepjZkXxIc/Jz7fmjzzz5gzO
      crYw4WOJeWWzMOMDBEPT9zh0liynGhO2AIvPu4zF50Fzc+OJzE+WLCeUCRVg9XOPE1FAFR3M
      nj33ROYpS5YTxoQKcOX7bzymC47MDGea5uhb+CPbR7tvOq5xOu0b4WTn6WSnf6z7pjUKdKzI
      8vEZnDIMA1E8vm9SnQlpnAn3cKLSgNNodugTUhhnQBpnwj2cqDTgOLQA00U0NEhYMfE7oLMn
      SO28ObQ37yG3uAIlOohuc1NRWjSlNHra9uAqrCEV6iKqQL7PzsDgILkl1UQHOsktriAv4D32
      BEyDXY1NnDNvDvuaGrH78rHpCYYTOjUVRbS0dTGjphaXfOyVnYqF6RmKU5rnYW97FzNm1dDV
      2kJOYTmCGiOWFphZVXbkCx2Gvu4OhmJpqkvzaOnoY+7cGloaGymurCEV7puWumhtaQS7D69s
      MpzUqS4rYF/XALUzK2lp2jP1upiAU7YFkF1eEtEQPX1BZlflUPfmRoIKpNU4Lc2dqOrBs6Md
      LR7ZYDipMxxNIMQjuApLcNkdGOGeTFpTS8PQVHRMUCMoQoDQQB/Dw2Fiw2F2NTUjoI+b2uWY
      kBxoyTid3T3Mrp3FrnfW4CicSX9PBy0tLahq+sjXOAKFJeUISpK2viEW1Jayed1mSmsXMNTX
      Om11UVk1g1g0SjiWwqWrxEwRU1cIdbRMS11MxCmrAE6nNS17VXkJu/bsI5Dnp6i4lHAwSE5B
      AenkoSbtPco0MlO/F+YF6B4KI5kaKcOGx2XPpDUwpeuLsgO7TQQ5gFeKE0upqIZArlsCyU5F
      VTl9PUeewfiw9zBSTlWVNO/eRaDyHPRQO4ou4g3kYWoKU31BtX3vHspnz0E2VKLROG6vm3g0
      imqI01QXJo2NzZxzzhxUTSWlqbgz9yU5pqcuJuKUdYF6u9owDRPVFMkrmUVlWTG9Xe0Uz5xD
      OhZCE49u3YKDMegcUjDlPgSPzPxzFyGqKlXV1ThlkXhXO8UzZx35ModBTcUwDZPuvkEE0ca5
      5y7ESEUZTmjMKsmnra2TWdVTm3ZmsK8bA4OkouPyF1JdVUZbayuLFtSiJSNEUiZTfazQ7nDS
      3d5Bzewaurv7WbRsEV0d7dTUzCERHpyWunDIMh2dPVRXljGc0EkODWAaJrq7EGdkcMp1MRHZ
      RfKynJH877Ob2ddz5KcYTtkWIEuWqbCvZ3hSC2Scsn2ALFlOBFkFOEkMtDczGFfZs2fPyc7K
      GY1pmgz3tJAIH7h4uUXWBTpJFJSV8eB9f2XByut48/XXkP355Dl1IrpM6456AkUl+HIKOG/F
      YrJvVxw7++pewunLQ1MVBNGaDnHG0vcx1LEbye7MtgAnC0Fy4y8s49xqH3VbG3E6nTRu38Le
      1n04/EUsmjuTrpYmkoeeST7LJNHVNL68MoLtu2nf+houfz7duzYwsG87geLqbAtwMrnwootA
      yuHjN16N4QhQeOk1uDwuTEPEJZvMWbQYT9b8TwlvXgnt29cgCAKB4mqig50UzlqMINhAELJh
      0CxnJpNdJjXrAmU5q8m6QFnOaMJ9raipBJ7cItLJOKoSJ69iLqJorRGWbQGynPEM9+wlGuym
      e9eGcfvb69/IKkCWM5tAcTWGrlJYvQjZ6aWrYR162poMuXLR5VkXKMuZTbivFX/xDEzTwNBV
      BEEkFR8mFQ3R21SXVYAsZzaB4moCxdUAzLnkhnHHfIUV2FatWrXqxGfr0CSjIWJpkI0UwVia
      ga5WXIF8wv392L1OttdtIZxUKcjLobezlcamFhJpAz0xzO49zTi9ObgcMkY6zuat21EMkVy/
      l/a9jTTvbUNDIhYZxu/309PTg6mlSOPAIYuoqRjbd+wikFeIlghTv2MnuiDjkQy21O+gp2eA
      ggIfW/e7LgCmQdPuHaRx4HPb2bWjHsHhxW2Hnr5hfF4nPT19pKJDKKYd0jFiiRQ7d+6kp6cH
      Q3TQ0bKL3mCUwsIC+rq6cPq9NGzZTGd3D55AAeGBTtp7guTn5yEI0Lj1bRrahqieYMKyQ9Hb
      2YnT7wdNYcf2BgL5RUg22Nu4k5gq4Pc42LVjB57cfOTMKpaRoX52N7dTVFRIPDxIS0cfhfm5
      mIZOV08ffp+P0EAPzW09FBbkH/NSTMeD1zbvo384fsTzTikF6Nyxnp1BmQK9k9d3Btmy+kG6
      k256t9dRsriaB+54EpdtmHebhmjevJ5AWQUet5eNLzyHXFrKYw8/zmWXXoQy0Mz9L29B6W6g
      I+nm3TXPU15ZjceXw3PPPsWKFSt4+JGHsSd7CcoVlOXa+f1tv6KorIxHnnyeGd406xpDNKx/
      gUCej9XvNlFdWkSuHOWB/a47u6KQpx74C8OmB1kSeeuFx0jKfl55+lHmLqzl6Rc3sWzxDB5+
      6Bl69+5iY2MbpbYwzREHZrCR59/Zy7JF5/DEI/dR6Jd4c1sPeze+ycwLFvPgX+5nVm0NfjnN
      nx94gUKvgKewCjEd4c67H2Dl5ReTTqQIDYcRtSTN7b0UFuTQ1dZKe88gWjJMXBXxup207t7C
      739zN+dfdyVP/PVOHL4Az770BmZwL3uCGi6HTN0bzxPFwSur13LBCmsN3ddWv4Qy1M6WboXX
      n3kcIdFHe8rH3i1v8uqGOi4+fwm//tVtuIxhdg/JzJsxeYU83kxWAU7pTnBO+XyU3t0ombcG
      i8qquObDnyLStwcMhS11dbR29QEqW+vqyCsae/e1YmYtH/v8Z+io34qajFJXV0fPQIg5RR52
      tTTiyp05lpAZwe2fw8UXXUKxRyYNtOxpIKpKeOw22lv2ULdt50HXBRiIwvXvu4xF82oZSohc
      896VXH3RAhrbguNvRvIyK0+gdSCOaPewdNE8yqpmUVGST2igh+279lE9s2L09GBvJ3V1dSjO
      ImblitTVNyFLlomV7Q4E4tz+89sJpxL875330rNrA8++tYV7/3o/b7/0IOt3dvHo448BUD1v
      KSsWzrbK1O9me8Nuenu72drYQqx3H6+8/iY9UYVrr3gPbpvCmhefYOO2PVx4/gqauiJcPL8A
      b9E5fOCD17K3sYmrPnADOS7Le84PeNndOkBV2ek5QeYppQC5RSVsXv8aL7+2npIS6yXr9191
      CS++9jYA/d3tvPz0Q+SWzgXRwdLly6kuLwbcXHPVpdgEkZFF2Dv3NfH43/7OjCXLkF0+li9f
      TmlhLhetvIjf/+J2Llh5EQCNDdto70mTiDaxfsM6+hMaduCqD36CH/zg/+K3C1TVzGH54vkH
      XReg0AfPv7qW7bubyHMbvPT6m7zy9k7m1s6kv7WeNa+8iJxjrbN8+bXv563VLx503zULllFZ
      6MflHJtgPr+kguXLlyMmBsmdMY98u0L7QAyXL5fKigqqK4qZv+wiFs6uxITRGbln1MzjnNpq
      ll+4koDHWhykt7OV9u4utm/fxYKlF7B0QS3V1bOZN6OcQPlsTDVJiVfmxVdfJ67aufzaG7hg
      cQ2/u/1/WHLe+WDzEundyTNPv8DMubU0bKuju7ub9o52hhICyxbOYk9z+7TKwonilHsUort9
      LzFNYs6sKvp6+yguKaZldyMz5tXQULcNZ24hc2dV0dvZSldfkEB+MQG7jdyyUkI9HThzSvDY
      0mzZvpv84nKqK0po39vIQChGYWkVVWWF7G7czby584iGBtizt53C0ipK81w07G5h7vyFoERI
      4STX50JLRtm2cw8gsWjRbLbvd10g0wdowFtQSWmBn107tlNYWUNBjpfwYC+tvcMsWjCPYF8f
      +SXF9HXsw51Xjk9W6Q2nKSvMpaenm9LSUvbta8MlyxRUlLJryxbSBsyet5BgVwumI0DNjHKA
      TLnk09cbprgkn+hQP+0DUebPnUl/bxCnrGMPlBAO9lFSXDxaVqLdTW1lIc3tvSxcuABJhKad
      DeRXziLXY2dXw06q587HbZcAjW1129CA0qpZ+GWdjoEo59TOpGFbHSkNCkurCNh12geiLDyn
      dsqvXk4nk30U4pRTgCxZpoPss0BZskyCrAJkOas5ogI0NOw4qgvqevYNjiynD0dUgEBg4vV5
      s2Q53ZlYAUyDro42hqOHHkwY7O0iFImTikfoHQgdr/xlyXJcmfBZoNRgM1tbIswqzzvEUY3e
      wQgQQpKkSS+TmiXLqcaECiA68wh3bqQhWsw5tQdMS6erpNNpJIcDWZInvUxqlizHk2ldIENL
      DNIT0ajJOUSn1uYg4LFjc/tHp7POLpOa5XRkQgVw5pRx/XsupC+cOMRRkZq554z+Oj2fAsmS
      5TAKsPPdN2hRijCT2WVSs5y5TKgA5TNq0FJ5FLinNn13liynMhMqgNvrY199A+2iQUV56YnM
      U5azGU2HdBoUBZQ0pNXMJw25OTDJpZhmlk5u/GpCBZA9eRiawvKliyaX8SxZDoeuQzwJ0Rgk
      khCLW9/JlCXgI9hEkGUQBTAMMEwwMx+nY9LJTXZ69AkVIB0bpLOnF9M0qaqqOuCoyY5tW8kp
      KicR6iOc0Fm2YsnZOYmrqlqWatRapS0rpqnWN1iVL4pWlEyWrAp2OqyPxwPSGVRyyRSEwjAc
      huGIJeiqBoJg3afNNlYWNhFcTrDbIZXKlJtuCb7NlhH8zHVFgePxzuWECuDwF1Nblk9e1cxD
      HE0SGkqimH3k+jxUOSBpmrhOx3EAw8gUvGZ9RppcTRsVakFRQFURFBUhnUbYv2IkmyXIdjum
      XQa7jGmzgSRhujNDg6JopaMbCLqOkIohDA5ZwhKLg2FiCmD4vJh5OZCfC3k5x6XCpw3DgHAE
      gsMIoWHEcBQhGLLKDDBFAex2BK8HJAkELMV3OTBdLkxRwEyrmLoOooFgcyOkVcRI1LqGADgc
      4LBnPg4Mm4ihaRNmaVrHAWK9LfTGDPa99Tp2SWbZwjn7HXUze95MJEnCNA1MBDyCgDBd4wCH
      9AMz38oEqx6OCKRwwPaBxw71+0AEwbLUdju4XRkBl8cqZIL7Ew74PhoEw8AWCkNoGLr7rI+m
      gS0jPAV5UFJoCdGJQtchErOseThqCX08AUPDlvJ63RDwg8cNxU4oL7X2edwIoggpxXJ5Uopl
      zREgHEHY246gqlBUAIX5Vvnm5kDAZ5X3BIIscvSPL3ftXE/5/Ivp2rkeu8tHsGM3RTVLcHgC
      dNSvmVgB7IESLl9ZSHiw5wDhtygtPYaOcTQGA0GrQFKKJdTJjJAbRqaQsKyq3W4VjMNuVbrD
      Di4X5AQsYRxxJUa+T3dE0bL8+bnj9+s6DIagtx8a9gAmFBdancGiAut/U0FVLV88ErOEOxK1
      tke+7TLkBixBz/FDabH17cosjKdpGZcnYilGd69lqDyZugr4weeF/qB1zO+DC5dBZdnk603T
      LRdJliwjdBQkI8HRb11NY3f7CBRV0dmwDofbf5hHIWwia194hPyZ57LsqJI8DLI7rWQAACAA
      SURBVPGEVTgul6Xxjv2E/EwbPTZNS6lHEIRjE1abDYoLrM/i+ZbA9Q1ARzds2mYZirJiKCux
      3CYYExglbVnqVMoyNMmkZXgSmW9Vs3xrp9OyvG6XJbiFBeDzWBZ5REg1zTJgwxHY1We1CknF
      MlYBH+TlQs0MSzkkycpDRxc07bPue2YVLJp7sNCb5linOBq3vuMJa5+acXdG+grVlVBVflTF
      Zxg6qpJEV9MULjgXNRWndfNqokPd2CT7xK9Ednd1YpMk0mmFysrJjwXoun76Pwqh61YFjEQp
      Uor1raQzrll6rHImQmC8wJsmo2/sHw5RsAQo05/A4RhrDZ120A0rDynFEsBwBLp6rP2yZCla
      WrW+SwotC+x1W8LtclmCdCijY5rWfcUyQhiJZYQyZl1bECzhzvFblj03cHBUxjCgbxCa91mK
      MrPSsvQAscSYoMcT1u8RA+F2gtdjfXweKzDgcU2pZR95JTIVDdFe/walc89DTcUZbNtJxcJL
      UeJhckprJm4BNr29lqQGkst3VApwWqCkrYqNZio4nrAqZqR/IUuWsHhclnW0iZYQyhIYrjHr
      riiQ1sYiPtp+z02ZWIIDYOiW8I9EPmyZaIgkWde0ZTrJiZQlJOGo9X24YIIkWdY3pYzlubAA
      CvMyvncchkKWkuTnWsqo6zDSUR1RIiVtpSMIllKMCGCO3xJen+dgn3wk8jUYH2tRevqgo8e6
      rtNhuTptXdDTP9a6eD2W2+Z1n7Dol9OXO25GuLyKuQC4A4VWMU70xxXnX4JqWKudn/KYplW5
      qmZVjpbZ1lQr9hyJWgIRiVoCPxJ3FgSrA+d2WhUy4l+aBiQS0D9oVe6BkQdRtCpPFMc+AoBg
      5UPPhPIykR/ssqVITnFM8GHs3BFLLEmW4Hjch7hHY+IWZH/3Kp60FMrvtVqMlGK5K739lnCO
      tFyCYFnxHP94S5tWITVkuVkj+UurVrmOBCFGLLfHnemcF8GsGbBg7lgLc5p4ARMqQElxPs+s
      3sCyRfMOebyvcx/tAwkCDmN6xgFMc6xTnEiOWagRl2Ok8EcEfMSKjYQuD4UgTGxFbaIl9F63
      JaDSfjF6WYaizLZks47bpExHPSOI+3faR9KSDrDs9kwI71QKZ5qmVWaqZimnaYyNY6RS48PA
      pmmdM9Jq2WWrZRyJ/hzFwNTJor1+DdHBLvIq5pBbNpum9U+w6OovYhg6zRueOvxAWGt7O2pa
      obKyctwxIx2noakdU7SRX1E2+XGAaNyyqvE4QlJBTKYQ4okxHxvAJlpxdEGwYslY1k0QBRBE
      BMwxnxRGjx/U4XQ5x3xfjwfT7cJwOzE97rEm+URwKr4jLQiWMI9wrGVxmJj8yeBQ4wBV515O
      65bV5JXPobPhLRxeK8omijbmXHLjxAqwo34bH77xJkpzDn7PS7R7uOK9l9PR0YmppehL6Cya
      zDjA7mbY1TR+30hl+H1gl8AEQbCC+YIgjp0jZL5HhsYl25gguzKdqP1/H2B1BTg7R6rPcnRV
      QUunME2DWLCbxHA/sXkX4M0rZbh332EehvP4adq9nWDAPzot4IFUVlpzWR74oMSEjAwqSZlo
      xUizOuK/jnQ2XU7LLx8ZiBr5n8t52viWWU4NkpEgFQsvxenJYfF1X2GosxGb7CA60ImuKhMr
      gIqN6GA36fQEI6/HwrwaqK44swawspzSePPLxv0eiQLhs951n1ABFp93GYvPg61b66YvNw7H
      UY/kZclyPJlQAVY/9zgRBRz+ApacyBxlyXICmVABrnz/jcd0QSMTjTFNM9OZHds+2n3TcY3T
      ad8IJztPJzv9Y903rU+DHiuSJB2Xihh5xOJ4FubJTmOEqaS1/6Mox0sBTnY5TbTvWJj2yXFH
      MrZ/hR7rvv2PjVTqdFz3VE3jUL+PNq39Q9DTUe6nYjkdad/RcMrODm0aGpFoHF1N0dbRDUB/
      TyeReIrocJC+walPx6gkoqRUg3gkRN9giKGBXhobG4kmlNG0pkokEgFgoLeLSEIhHgnR1TsI
      pkHbvr2o+hRfHjJNIpEIpqGxr7Ud04SezjaSaZ1UPEJnz5FfCzwSyViYju4+TF2lvaMLgK6O
      dlTdnLa6GOrvYTAUGTfV5kjZTVddHIpTdpnUwYFBBobD2EwoK3TRUL+LqKYyzxdg1/ZdVO83
      L9Gx0rtvB2bJclIDfQiazsyFC9CVJJHBXjoGw8zz5U/p+oaaYlvDLlauOIdgTEAbbAZMbEAi
      3EfalDHMzIsix8jw0ADt3UN4nQIlZSVse+ctcmctYW9TI8loiKLK2VO6BwBFM0mFgjTGQpQV
      +Nm+eTv51TNoaWki1Nc/LXUh2l30dnUyaBORgWGHSfPeLs6pyGNvz9CU62LCdI/LVaeBwuIS
      JFGguDCH7t5+IqFhKmrm0Nu5F4+/kPDQwJTTKC2xXurxe5wMDA5hYBJKaDiNZCatqa17JcpO
      igtyQfYi62Ei8RSSYJBOpwkndWpnltDe1j2lNHLyi3DZbZQUFdLR1Y3kzSc52EFCUZHdPhLR
      EFNsY0jFw7jyC5FFGZ/PQyKWwOPzIYvatNXFUH83pVXV1lSbkozDn4ff4yAVi05LXUzEKasA
      vV1tJOIJNNOGIeVwwWXnk+jeS37RTHIDEi7fVKdtN+joCxMf6sFmEymvqUFOxyksqSJ/Rm0m
      ralNB6OmYiTiCbr7hhBtAjU1Nfj9fuyeAAtrZ9Dc0kVZxdTSGOzrJp6Mk1QNDF2gdk4NoihQ
      UzOb4vwcZKdnymt3JeIJ4uEIxcV5NDT1sOySZfQ0NZBXPF11oZFIqoSHhwl4nSRtMumhARLx
      BLa88mmpi4nIrhGW5Ywku0ZYliyTIKsAWc5qsgpwkggHB1B0GBwcPNlZOas5ZcOgZzoOSePV
      l57DV1BNTsc+7P4ihFQQyV9C/75GJE8OuimyYsXi7HsMx5FsC3CScAZKiUciXLSshPUbdzEc
      DjPQP8COHXW09UYoznURHgqiGUe+VpZjJ9sCnESWLFuOJOWxYsksfLm5KGaCnLJcZFHG6ZLw
      eNxTDmFmOTzZMGiWM5LJhkGzCpDlrCbbB8hyVpNVgCxnNVkFyHJWk1WALGc1WQXIclaTVYBD
      oKVibKnfdbKzkeUEkFUA4Cc/+wkAicFW3qjbxf/+z++Jpg8egv3CZ25g1apV1O1qnfzFIx3c
      /czaY8rXXX+4lf/40Z2o0R6+953v8s1vfIvO4DD/+p1v8q1vfJPWgaGx7WDymNI428mOBO+H
      kBpic30Ta15Zg5k3m3VP/YXeYIJ/+MHPWFg59tKHJJrc+p+34vK4WTzTz2u7wgSDIb54zRKe
      emsbJdULKRH62N0ZZWltCXc/9CqLZpfy9jMPsaWxhx/+88dZ9fvnSQ2F+Mmqr/CbPz/K1ddc
      zaa6eq5ZmI8x91ounVfCl775LX666jESoV4EXykXFCZ54u/3UH7RR/j4Anjw/rtGt595/mme
      fexhrvrIp/nWFz56Ekvx9CLbAhyI7Ofya6/j61/4EB09Ea679grCg9Y6U9ULz2fVqlUsnjuT
      WUUymrsEh03g4zd/nXKvxKbtu7jwkssp8Dlp7Qrzg3//V66/+jIufd+HWFgkEpUK8BpRwmm4
      8oM3ccW8WWzfuZUP3fwdrnrPSmZ40zyxtZ9L5pWMy1KgaiFfuOF9BIeizFuynN62vTQ37aVq
      zrmj20VVc/n0xz7IlrqNJ6PUTltsq1atWnWyM3GyUYa6uO+Bx6iYu4zCgnwqi/OprJhBoc/G
      W1uaWXn5ZQQ8Dlp3vMOTz72MJ7cAb+FMavJlIpEgTzz3Oldc/yE+dM1lrH7hecpqz+UD713O
      n+74KzXnXUm08U2E/Br6W7ZTOW8xS5YuxuvNoTjfywVXXcf6J+9jIG3nsvlFNMdzuXTpHFAj
      /PRHv0UhiiOvlM2vv0TegpV85Or3YgvvY2fIxac//iGkzPYnr13BG6+vYdnFVzC/tvpkF+lp
      Q/ZRiCnSuqsOR/m5lPqnPtHvfXfdwY2f/Qoee7ZhPlFkFSDLWU3W1GQ5qxkXBer65rfRh8PY
      a2ZhptOora0U/fhWBARSuxuJPvMcuTd/ltS2euwzZxK6515c55+PlJ9H9OXVoGl4r76SvC99
      YZLJbwUSU7wFAdO0A7MQhNwjnn0i0QcHiPzn/wFBwPO172JfePh5to3QEGKuNW+9qaSI3fVH
      1Pq68cs/TYCYV0DgJ7+xVmg/AlpHG0rdRpQXnsSalMvE/aVvImBiP/+SY55m8GSRbu8g8c67
      5HzMmtD5yw9tRTdNfA4JQYBISuNTS8rwOCRWNw3QFkpSEXBZK9LufyHvtdcQf3sjsTfW4D7/
      PJxLlmBEoriWLsFMpdCWL0UfGGTgV7+m5Kc/JrHxXRLvbAJdR7DbMVUVqaho0hk3TQeC0DEN
      RZALJAE/p9JCSOEffBt1yzsEfvq7Iwo/gODzA6AN9BP+wT+ibd006bScH/jopIQfQKqcgbZn
      J1pLE/L8hQhuL/LsucTuvJ3YPXeQe9sdiE7npNM+2cgV5TiGh0d/V+e5eLstxLbuMIvLAuS4
      ZHQTVlTkkNIMUuoAbtnG/Zs7x/cB9EiEgV/eRs4nP45z4YKDEjJ1HVPT0Hp6kYqLSL67CX04
      jNrbi1RUCCa4li7BXj3ZdYV14GVgaoutmaYTOA9BmOoETdOH3tdD8JPX4fr0l/B+5VtHFE5T
      1xFsNkxDJ/7o34n/YtWk03J+7itIVTPx3HDT5P5gWusCG5EwgseDYBuzg6ZhTFqRTiZKUzOR
      557HMacW7+WXIbjdoy1X53CSn7zaxKeXlrNy1sFTKrYOJdANk5ah+PgWQHS6KPnRqtHfejgM
      gojN7yOxYSOJzZvJ+fjH6Lv1R5hKmryvfgXv1VeS2PA27osvQh8MIrico5V5ZARM04cgHNvk
      qqY5Mg14GaJ46gi/aRhEf/NTsNvxfOKzkxIowWbD0HWMoSBi7iTnwRRF7Fdej5BXiK1qJmZa
      sRYZzKzCY5omRiyKLdOyjOZPSYHdjugPEHvgbtzXfRgxx3IfTwfhB1DbOwj+5ncACG43+V//
      KgX/+A0Aclwyf/zouYBVBl2RFKIgUOZ38vj2Hp5q6OGfL6vhF681j+8Eh+65d3RbGwwyeNtv
      GbrjTkzTJPLc84TuvR89FiP++hoSb2/EMXcO3d/+J0J330vfrT+m5fL30fnlr9K09DzU3t5J
      3IaIaZYd+bRDYAl/LqZZjiAcn2nzjhUzFkFrbsT9ic8j5uQddDxdv5n0znpMXbOEEVD3NjN4
      3cUEr7+Y6A/+cVLpyNd8EPmCS0k9dA+Rf/sOA++/lP6Vi4jd/xfMVBK1oZ7gx64i9C/fQG3c
      Ofo/welCEG2WwmgaqVeem54bP4Go3WNzqpqJBOm2ttHft77ciKIZGKZJQ1+Urz26jd+u3Usi
      rfPg1i529kbZ2B6iJ3rAInmDt/+BxKY6PJdcDKZJ6N6/Uf3sk0SeeAo9FMKIx4mt34CtuIiC
      734bQRSJrX6V/K/fwtBf7wVNw3XRhTjPXURi3QYCH72BI2Gaxzrrrwk4gRiCcLCQnUwSj9yP
      3tuN+6abD3386UfBNPF9+/uYoSD4/GjRMObQ0c0RpG54E/WFpw7aH//1/0fy4fswU0nM4CDp
      118ibreT85PfjD9RkhELixBsElp7K1JV9VGlfzJJbHxndNt71ZUY4fDo75caB9jWE2FuoRdF
      M9g3lOQfL53FPZs6SKR1UprButYhbAd2go1olNhLrxB79XU8l1+GLScHpXEPvvdfT6p+O2Ys
      hjEUwv/+68n91CeJv7UODAO1rx/R50NPJEjVb8cYGmL4vvtxnrsIR+3hp+cWxfBhjx8K0xxp
      uPoRhEOvZH+yMBJxlA1rkWrmIHp9Bx0302mUZx4F2Y7787eQfncD6bqNCDYJ57+sIvXLVZNP
      bHho4nx0jQ8uCJm8mJqGkFlKSFn3BtEffi9zgoA0/1yc130YzwSKe6pgahrJLVsB8Fx2KVJJ
      MemmsfWnddOkK5yiK5yi0GPHIYm0DiX49LJyGvoi7BtKUBFwEUnpB4wDjPh/mkbi7bctd2ft
      W4gOO0X/79/I/8638Fx4AZGnn0Hrt4TelpdL/NXXECTLH0++tQ5l124Awo88RvAPfzrC7ciY
      5pxMR3ZyCIIB2LH0txOmPAH4NGKaCC43WnMjRvLgEG/isb+DriMvv4DoT3+INhxC21lP+qWn
      ST/7GMKs2uOTrWgEU9MI//B7RO+8nch//4jUGy+Py7fWsI3Eo/ej7tx+9Nc3DWL33Ul6ks8i
      GfEY5iTCu4dCkCRmPPIA8owZ5N78OTyXXoxz8eJDnhtMpFEyFj/glPnZ9fO5eEYuRV4HzcH4
      +GeBoi++jCBJGLEYqKoVf7bZCNz4ETAMvCsvJfrSK8ReeAn77Nl4r3gvyW3bUXY0YESiB5YI
      ybrN6NEogihin1mNYD941XnwYppRBMGLIAQnVQCmKQMeDGMOgtCKIMxguh9sTXf3El69hmRT
      C0MPPYGjugopJ3DE/wl2O/bzL0bd3YAxNIh96Xn75dsk8vP/xBwcwOjvxfmpL5C6/WcIThck
      4tZC4amUtT3N6Pua0Qb6UJ5/ErVuI9qOrej79QtG8zgcQnn7TfTONmJ/+jXJZx9Hmj0XW1HJ
      Ia46htHfizE4gFQ9a3Qs45CYJvEXn2fox7eSePlF1JZmnCvOtyI4kxh/MHUdQRSx+Xzk3PRx
      HHPmYCaTxNe+ie+6awD4W10noiigGeaoaTRNuGhGLpph8tnllbzWMsi27sh4BYi/tQ65soJ0
      y17rH4A+MEDk2efwvvc92Px+Utt3EH9jLYJdxvf+63DOm4uUn4/o9WLqBvbZNXiufh/Ktnqr
      YMJhlIadiF4PrnMXHeKWFKAZUBCEyVa8CHgQhCgwD0EIMJVVVvZHTyRI1O8k9PTz9P36T0TX
      vkVi6zawyXiXL0aYxOLeotuD6/qPYF96HvGH7kEqr0RwWWG61OrnMbo6ELw+pAWL0d5ZNybw
      8dhxEX4ATBN9d8PkTo1F0RrqMQb7Mfp6QNNwvueq0eP6YD9GLGq5boXFoOvYcnKR584/rPCb
      isLA975F5K470bs60drbUOo2EXvqCcJ/uQO9twcjFkXraEeeOeug/8fWrCW1pwmtuwfR7Ub0
      +RAEAam4CAQBx+waAF5q7MduE4mkxsLrsbTOS40DVOW6qAg4WbdviIa+6AF9gFjc6lzoOgD2
      ObWkm5pxr7wUqaiQ4B/vwEilyP2HL5N4ax2pbfU45s4h90tfoOWyK8j/xlfxXvFejHQataOL
      xGuvYyoKeihEuqn5oNUQLSQEwYNpBoDJrWclCBowgDUAVsC0CX8qRdePfkXk1TVoPb2Yioqn
      yIHNaaI883dCzRvwfutfsM9biHCIgaLU6y9hP/8SRI93dJ/7IzcR/NpnEB1O/Lf+EnnRMtR3
      1oMARiqJUFCEOTj1dbyOJ8qaVwh9/1vobXuRFy3FSCVx3vQFIv90i3WCx4vrY5/B9w/fPmS5
      jBB/5UWSr75y0H6921p3LHrf3UTvuxsAceEyPNd/kNzPfprgH+9A2beP+BtrMMIR7PPm4phd
      Q/LdOrxXvY+8L38Rcb/WOakatIXGXhByyzYSqo5LFnHLNn6yuonGgRgXVOWMVwDH7Bps+XmY
      qoZ9zmzSrW3k//N3ERAwdQPB6UDZuZOcz36a0J1/Yeiv9yB6PBR8y4q/Rp9/kbwv3oweDpPz
      +c+gdXeT3t2IkUxiz2jngQiChGnOB/YcsSJMU0AQTExTAkoRhAXA1J/CBNCGw/TecQ+x9Rsx
      IiGcBQ6MpIhMGkG241KCaNuGGP7KJxFnzCL39ruQyisxDR11907kOeeAbMeMRog9/SjOlVeQ
      3vIOyhuvIJgm6qYNBG98H95//S8EfwAzEsG2YDHijq0wfxH62len5T6OB2Y0QvrVFwDQmxsB
      MPr2C3PHYyTv+TPpdzeQs+qXSLMODnwM/J/vkHzjtUmnqWzdSvydrUSefR5ldyNmLDZ6LN2w
      k3SD5b4N33Mf4b8/SM4Xb8Zz4QUAlPgcqLqBKArU5rvpjSrMLvAQcMr4HRIJVUfVDRaV+MZ3
      gvVkkvyvfxXfNVfhufQSlO07GLr9D5ipFKmGBtSOTgSbjcFf/DcA0WefB6eDobvvxQiFcMw/
      B0GSEJ1OBv7zRxT+2/cRfV4wDPr/6ycM/fl/0aMH9BUA0+zHNCczGOYDzkcQrkIQljBdwm+a
      JrqSRu3swuxqxZ6KwnAMl11FNDRIKeg2edQtNNr2MnTzDaQ2vIkg2oj97uco69cgeLwM3XwD
      8T/8iqEvfpTord8nvWY12g4rYoGiEPvxv2NGwmDo2BwO9A1rMWMHl8mpjrb54M6utreJoS9+
      FOWt18ftN00T+6LFmKp61OmkNtWNE/5DYaoqSn396O/+mMLXLqrm4hm5DCZUdvfHWd8aItct
      0xpKEkqqxNM6L+weGN8CRB56hMhDjwBgP3cRRjiC2rKXnu/80+g58owqtL4+64euE33yaaQc
      axQ2+bZVKILLRcE/fxffZSsJ1switbUeU1UZ+NkvULu6KPj2t5AKC0avKQghRHHikN7YefOA
      4iOed7QIgkBy0xZib6xB1tLWTtPEHLEPJgimiZCTh5kJPZrDIWK/+wXOi1Yi5hdim1XL0Eev
      HHUfzdQE7+jqGrjcyEvPR2+2omXGts3Tfk8nCzMeI/zv38X/yz8ilZYjVc5AEAQCN3/JGiG/
      606M4CTGO6awemZLMMEPX7TKVhSsSw3E0/z2zX2j5zglEUUzJn4cOr19B3roYKustrVjppTR
      38ZQCOfSJfhv+gTlf/oDYA2nBz70AYbuu5/UVkszHfPPwbVsKcN/f4DIsweOPB4+BGqadkxz
      BnDwg3bRDe+ihSOkO7sJPvo0SmYd26PBSKXouvXniInxlnj0KSldxxQEzEQM5/+9FccHPopt
      Vi3yDZ8k+of/Rh/oY+gj7x0V/iMhlpYjlJaR+M1PM9ef2rNQpwpicanlBqaSRH/+Hwx96WOo
      bXsxdZ3IvX/FVlGJ89rrQTpxr6Ib5qGD5CnNwORwsUPTPGKF2vLzsNfWYgsEcK5YPtoL12Mx
      Ujt2kty8ZfRcqaSY4v/4Ib3f/zdyPvXJA65UiGmKmfj+gdmYDZQhCH5GLEI02Efd1s0EQwLe
      Leto/t46Lu0PoUYjPOT18//efZ4tO3bjDBRywdKFh70HgNi7W1B7enDaxpro3K9/Fc8Fywn+
      41cRdB1TlCCdxNi+mZz/+m8EQSD4tc+ibdpwxOsfiLG3ifTepiOfmGFfUqFHM5jnlNiU0Fjo
      tlMm21gTjpNCoEoWGdZhhc85TU7hsSEtWYF81fWk176KtmcXzk99EVtxGfFnniT0y5+dkoo+
      pSef9OAQamsrCAI93/w2ob8/CED4oUfp/cG/o+4da3Lir68h8tTTVNx150GP2gqCH12v3G+E
      18I08xGEg8Ocvvxi8n0BrvnQ1RTVzETb04wRi7NGiSOLGglDRjAMZs8+8qCSkVLoXvVzRPv4
      h/dyPnOTFZYczUvG/+/pIv7ys4Rv+zFmeOorpE+GrrSGiMnb4RSCKNCqWIrql2wUSSKdaQ3d
      0OlQT9JqGv4A9htuwv/lb+L72vfw/fCnyBdfju/L30R0OvF84MO4r7oGx4UX4/rwkR+POZEc
      uwLYbAQ+fRNVD9yH4HTifs/lpDs6Se1oIPCxG5n57JPMePxh/Dd+BAB77WyG7robfb/ntsdl
      RHQd1AJYIdND+YEmgtuP164TdnsovPoq4hWlfP7Xv+IzT93DcFcTSdNGInH4zpMei9P/1/tR
      uruRjDSmabA+mSB2zRWsfuxhXvzB90HX2Z1K8UYoRldaY+2bb7L9b3ejrH4BvWn3sZTcUVPj
      lFFNWOBzgmEQsNkIqjqmaZIwocYhYyLgF0/SiyyRMPq2OqSyCgDs8xeRd/tdaP39aD09CJJE
      4W23U3zn3bguXnly8jgBx+yM2Wf//+Wdd5ykVZX3v/eJFbu6ujqH6TQ552GYgQGGAQkSZF1Y
      EXaNK+a0YljDrq6vuuHVxTWt4oooKgiSBAUGZGYYmMzk3DnH6sr1hPv+UT3T3TM9uYdF39/n
      05+u7nrCfe5zz73nnvM759QT/tu7MGprKfzIB7Gam8k2t+KZPQuro/P4JrfoU5/A6etDWhb5
      d/w1asH4UVtC1CDlwVFCoAAzTnF3wezZOdXmijtuhztGVKqi4d9nYgg5qRQtX/w6A798BMVv
      oEiXlmwGfdXlcM9H6LjzVtRYAgJeUq4klszgz8sjbNlor29FGm9c4E2ZaVBm5rzo1eaIkhPR
      vcc/13lPOm3CISonITvaTlaNhYLb04Xd0oRWNRILYkydRmbXTrSyMuzuLro/8B6s/W+ujHvn
      JQDCNKn4/ncx62oBUDwetOIS9MpKkq9tIrVrN33f/R5C0yn7129Q9T8/IbHhFYSmn9KTKoSO
      lFOAnJ055zTLG/fYs4ckF2xz8j1bPvvPDD72VM7ao2mQhUJNo3/NajLJXmxUpJT02w5ZKcn3
      6rw6GCPlwrLxGB1/odAXLwfTxNq2CX31dWR/9sMx3xuXrCTwwU+jTZ0OysmTgjknx8uPfu++
      0w9+IUZZHd44jBGAPscmMhwd5EiXmARFujQ5DrMN87gyErzx+uOD/xjUYU+cb9lSMkeO4g7m
      WJ5dX/oKzic+Rt7Nb8094GkDZeqRMuflzak/FxqcITg2+KXj5IhqmoaUkvT+UY63jA0CvKrO
      LWvWYFRPorq6EqfRAk1neUUpeqwHwf9HIx/Q5y0i/P0HsF7fhv1Xd5J55oncF/4ApNN43nob
      eV/4l3FjiEezTgGMRUvgiccgkzlpoBtXXo29bw/eNdeS+M1DuWPOEgczaQalZOWo/6VbD2CU
      T0VRBNJO4VoC1evBGuxCzx8xoy+pyh87wl5Op49/brUzHM3aqELBK206oyflUAAAIABJREFU
      3JFG+5ZfcsoGSdfFqK05/rfV0kpyy1ZwHDKHj5Bc/8opzxVCRYiZwEKkPJX6c55wXWQmO3wf
      gXfBXGQ6gzAMxCiZbHvfPdiDgxTd9wPyPvuPFD/8GPlf/Kfj8bp/6VBq6sHjRYQjhL75XYRQ
      0GfPI/3Yr0FA4Gvfpuj5zRT86mmCn/jCaQPoj7E9rbZWlPx88u56F2r9WC+x94abUEMh/Dfe
      TOjd76f8qT8S/vLXCN39ToxZ03KGfP3UispU04Mhcn6aY9AiFaSO5jzF1sBRMu09OLEu4kde
      H3Pu0hOpENXayEio1g0GHAcFyYALxijHRGrH6wSvuRo17+RBIRQl5yEehdSO18m2tjHw81+Q
      PXIE34rlpw29EyJIzut74ZCui93RCbqGPipg3yjO7RZKPvsxor96CFpbEH4fBR++Bz0/n0x7
      C85Lv2foe99AllUiYkMT0p43G7S5Cwl987ug6TlSW14e2X27cbs7EWbOWhf/6Q+wt20i8NX/
      wHfZlQAotaeP8xg9++sVlegVlfgvW4USKSC7fz/ZnTuwjx4hcOttGLV1aGUjkYH67X8DQN6h
      g3R/5Uu4iQTJnQcR49CnHddBESrqKEHMtB/FtYf5bEVV2ENRUq2HkJkh7GQSzecD4PX2oRNC
      Ih2HI5ZFv+OwL5Ol37XpdmxcISgcZWGIPvhLYs+Nz12RUhL50AdyFIhhZPfuo+G6txL9xUOk
      XttM4tU3KH+llMQ2baHpzrtJ7Rgr/SX3vJvJT/ySwltvIHRFzjKhFkTwzJqZ2zkMDqJdczOW
      q+Sitv4CIcIR8r9xH1pRCVq4AK2wCGGYmPMW4V1zA0owj6H7vkXyh99GRCKYc8bn3J8LQne/
      m6Kvfwtj9hx877iL9PZtKIVF4x5rTplK8de+jnfxIozqinGP6XNdZuoG2THC4eCtmYUdj5Ju
      acDJ9OGfsZLgzJXHBz/A+ob+sQKw2hegXtcpUFVmmF6u8vmo1k2WeXz4Tljqev7t/3Jk1WoG
      H31szP/dwUHUSARzxgkqzDG9TkoS6zacro8mFFowgN3WTmbv2A2Y4vWg+T10fu3r5L89l01Z
      r65CL83Re3s++VGGHnwAJ57FTaTHu/SfN3Sd8A9/eVqef3bnNlIP/AgAt6kBGT2P6L1xZu2h
      hx5Er6kj8olPE3jLdSinoZgbNbV4Fi/Bu2whGCcfV6zpaAKMURqFv34BmsdAC4TwVM0jOHN+
      bjeYf/Kznvcu0+nowGpqpvMfPkfHZ79A+sBBnHgCVI303n3HQ9bGQ/SXD5E+cGb254XCTcSR
      6RSeJYtIbTu5PXYshlA1+l58iYJPfoxJP7sfNRAgOxwMJI8eQQYD4DFwfP4JaZNUFUSBD6n+
      L2Zf8PrI+8Z30WvHZ+geg7V98/ENq3nrHajllbjnqAqOVnXdoSGiDz2IWlpG6P33IHx+jPrT
      OyuFEASvuQ5z5iy8C09O1XOhuPC34DhEf/UbGq+9gehvHsaJx2i5/c5cRNkp4EaHaLz+Jnrv
      /58Lvv0pmxWL0fPNr9P5xS9R/JV/JLN/P9EnnhpzjGf2LMhECZQU4l+2kNTjv2Hb3bfwzPVX
      MOgkeQVYO9CHlkqws7efB/oTdGctnh08t2IU0tRRIn48U0IE54fJq1HRywNIQ0dE/G94QKcI
      R7D7+8hsfTUXKDN0ipl9eA+gVNXgXXMDQtcRHg/nmk5WWhbO4ABWWwt5d9yJ74qrEIpy1hno
      hKLgmTOfwB3vPKf7ng0mlJWUOnCQ0NtvQ/j9yGz29Ac7Dn3f+nfM2hqCV14xkc3IIZMh8+zv
      Ca5YidvTB45D/49+jG/RArTSUrr++wGsPzyKe2Av0Q0vQ9CPx0nQEE2gKYJ+XadE16jx5kyf
      czwa0vRTrNoUZs6O9HYMarGfQJGDwAWZ6xd/kcSOBFAVm1QwhNV47urF6WAsK8M7yUO6JUXm
      ta4xpkfZ3kLyP79BMpnEvPPdGDX1+G76q5OuodXUg6bjf9c9mEsvBUDoZ28KllKCbeP096MW
      FWHmn3/qSru5lcCKS0lcczXJPz5/3tc5ERO6DieeX0umuQU1cpZpSoRAWheHIOXGY5gLFxN6
      3z28+sdnODA0xNatW3jioUfo37iJA//xbTbs2Ma2VJaX40n2DOv5x2gHIVVBajqGatIldA5L
      k6mGwVEnx8UZcE4xCwY8EBqrLukBdVxCh6bYCMATAbxnHljqpDy0unykfmYvtDEpgFmhE7ok
      D23aOO8jNgSOjX30EG7P+Dmc1Jo69LkLxxWOcSElbjyOm0rhplI5v4uuo5WUXHDCrbybbkTV
      NIr/8fMooYkzSU/oCuD29dF8y1+dUv3RamsQuo47MIB38SICN1x/SmrEhUKvqaXkhz8BGeVQ
      Yy8l165BFVl6975O68P/Q2UepPqgTJN0eAKkLZtswEeJUCgzcxu3Iilw4llCQAggY1Om69xa
      VoTiZMcmrdUU1GI//tJcstl0IoyqSlxLsrl1gLxCDStroRs688ImrUNpDsdsJocMjg5lCJcF
      mKL6cNISuyW3GoigiWdOGKs9jd04iHdmCF+VRvxIgNTeKIrr4HSPyjzhMyCZRSnx460YETnP
      ZD/x/eNbsvx/9wHSJ3h3RyP/375/Tv2uBAJnPug8IIRAC4dx02nU0lKE14vT2XXB1x0jAMIc
      Tx6OdeQxP4DEVTREKjdjKsEgbjY7YuUZb/ALgf+2W/GtWI4SCOKbPhWzqormu98NXi/CNPHN
      OTNt+fwQoPLmK5GxLJVH9tH31ANgaDj5IRKqRkgVvJLNUiDASVrYXj8aFlLTkQMnR2oJy8KK
      Wkhdw/AbqNlcP2ilAbwlAiFzQuH1D69sHhjszRJCoytpo9tA2KTA1LAHMximTrXXxvBKPKYD
      QUjlF4NPITjNi2qCnOXDcYpQFAeQBOp1AvWFSCBxxMLuy2IU63hrPGQcD5pqjVlxPDUenKsq
      Sb3SBemx70emkkg4OZ2llKjFJYhx6A2nxBuQVdooK6PkHz9P388fJOn1oAzHE4vTOMtOhzFn
      edQz6O3DcFUXN2SgLFxK8N57kR2dDHziH3BPwfTU58wm9fxasrv3UP3gz1AjBWQaGnFTKZz2
      doaefPriCYBQucrjY+C7/4nT2cGaY6pGLMa8ggiuY/MW3BzBy3VRXQthKCiKi5Kng2mgeFVS
      zUNjBpVQFYQ7shdw4xkoNMdRKiWXlOaxqzeJaRgImTvHEoIpPpWurCSRlVwSHmXGmxdEjRjI
      rAO2xb6mPrIeP709MXSvwar6PFp6EuzvSlJc4KM3mKY+36AaiRZUUKRKLvFwDooGwbk+cIuQ
      tiR7OIbbGcdYdTVG7WS093/spMEPnNvgfwMRuGwF6cbDCDuO7MpR7nXl3MMt4TxVIMWxUVQF
      76RyrG9+FW3lKqibBNvGFwC3pQFhW9jNLaQPH0a0mGjBIDUPP0SmrQ2n59xSAp4r/NffiFZR
      Qee77oLhUEXX58ceyiDy/ZipGK6movoNjGwCGQhhZpOoZMHN4hh5uEsXI6SC1dhI3l1/h9vR
      RPbxX48842CGjFVK8J5P4bYfxn32p8PfCKLpLDOKfKTTWXTDS2/KRkiXblQW+wSxYVan9HnQ
      ZhagGi5CODimTiIax1IEiYxLLGNjDA/KiF+nL2ETDNhousqh7jg1+WGUTAahgVROJpIH5wdw
      HJX0+g4wPeR95iu4Q1HcUXEN0rZBUd70SXIDc+eS+I9vXvB1zv8ps1lSD/8Ka/cuPJOn4K8q
      JfB/vjbyvaaB30T4TTQricjz4X/bLXR9+Z9J796DVpFzfZsVFfjmX7iH8Uww5y1ACY2kzhDJ
      BKZP4Bnqw5wxg8jHPkqgWMeszqfwgU8iIiNUDJmFgi/8M0X3/QC1tBTPJZdgrR+b4UCpqib4
      fx9GqZqG034UNy+CjYnt6NQXBCjzqNTme6n0aRR6NSI+gyWFXoQQ5BkKbsCLOjkfzScRWm7o
      ClwSmoe+hEtDXxLbVbAcl56YRedQliKvgmIauLZDZUkBtseH8AiENn4URbbXJvZiLgVL8DNf
      QS0pQ7ou+pQcedzp70Na2Tf94AdyNI1zIM2dChe8CVbLK8hu3ICzdRNU14Pfj3rdGrSGgyj7
      dgMQuOvd5H/wI8ReepnSj38UrfB8E+KeG9Lbt2I1NKAVF+NKcPtzAe36zFm4Q0ME3vv3EIsx
      dP+P8C67DFvJ4jz7E5xYCuPeu4h99L9wpYJ31U2YU6YBUPbLRxCqSsF//4qBT7wHu7MDJZMB
      BGq4AOfAK4idf0IAblpBsbK4hoH0mCg4KHLE6uWqGsLJWYJQFPT8scNWwaG4QOOKgnJkRqLa
      IypqUVCnrjS34XQqQwiPQOH0aoAVVcjuG8Rz+9/iu/ntAGTWv0j6kV/g/+i9eK9965/F4Aew
      W5on5DqnFICM47A9nWWGx2BvOkudaVKiKexMpuh1oU5XaM7aLFA0SgYHkdEo2e4ezNUrEX94
      HHEsaEJVybv7Xah5eeTfdOOENHp8uDz/zFOU1M3G4wyxedshLt+3kdjTT7JzIIEqBI6UdOsG
      7/3aN/FOn4GbTJDavI7XSmuY/KUvkLrlZgYW382KRzfSNhhlR3uUSNCH6zeZ3NDOlCKF7gOb
      2TdosGjxPF64+QPMuP/LVGk66xubMH76S+ovmcUWrZ5LnWYKvDqEDehJomSzSEMHE2zNxFV1
      VCeL1MxcTtbyMKP19tFQcHFNBdfwIJC4jkDYDlJVkaqCKuycj+EUcIRGtORyjBVvJfK+AFpZ
      jldjt7eCYeJ71z1433LTn1VpJDlO3tXxYPW1kO3vQC+ejtN/FK2wDj2YR7a3CSd7GgHYmsqg
      CcH+dJZpXg97k2lKAl7m+jxsS2WoMU0GXIn/wF6Swzkmjd8/BvbILOS96mrCn/8SWsnEpzI5
      GTHam2LE3cNctngGinqIYIGB4tMQAzDZNEkpKsse/DWeqbnZ3O7s5MhzL+D9yEeJrltP5Cc/
      xfn4vSgvvkbR4RaCl19FeEkVXfHXiT//RWSglz1bW9FCBbS0TiXY3odzVSGpV9Kk0120/OI+
      rr3zRbqm11DS0ooLaNLBLg8gOxOIrIWteHAK8nBjFpqaRUS8aJU+NM/pnWsK7nG9RtUYfnMO
      pxIaWXsVtLxK0l/NwMz3EiqsIBg6IbepaSJjUfx3fepCOv5/BWKczNvjQY9U4SSHINaMZYE6
      PD5TzfvQC+tOvQfwCMF0j4EqFI6kUkiRO7Q9k6VUN3BcB4Qy9gLHBr8QaNNnEPrQx9DLK86y
      WsxZQkqk6yDliTNeiJopBYTDBXR1dBIKBujetYM9iSxpIC1dnCuvpXruHJyenB6seH1UXbWC
      TCyFfu1qni+MYJaUM3jJTTx3uAfj7XeQLa8jmGgk1XkA4WQpCRtkk4PEG7fjjx8l7jg4VxRQ
      WROhcsEMYgMdhFa8E0XV0GSuPzQslGIvUlURQR1f2MJbIlGmF2FO9qJ5Jo4MIRGw7KOIeXch
      Lv886uqv4skrwuc9OfWM29mOvevUnK03M8yFi2G4Es5pIS1cN5esTS+sxh7sAEANFCGdzKlX
      gAU+D7vTWeZ7DXansyz0mPTbDkFNJ6gqJB2XOeYpvJdS4r/tdswZM8/r4U4LIRDDESwn1rO6
      fPV1xz/PnA/pjh34ei2mWo0okUKKP/h+hK6jhoO4qSj4IH/+LG7Vi+n/92+x+B+/gjl7Du7c
      6Vy3/TUCU+tQSxcj3BcgGwMkM6vzmSEUpAvSlkih4uoGVZUlyHwPwqMye+F8stvKUPQM7kAG
      2gZRFQcuq0PGLcT0fIQFTtrBsZNonMr8LNlwcJApRR72dCSZVx8miMOGozF0QyNPcYlJhUvr
      RjyjAons2gmZIUTtajweL84jX+eFxj7K//ozkOjh5Vd38ndvXUPLv/8LR2YuZGFHOwcOHKCr
      P87tb3vrxL+ziwAtP5/wvV9g4J+/dNrjpG3hqZiCoik4nYfRKqdjx6N4K2qwM+6pBUAIwRxv
      TsLmD/8uGBUw4zsDm1EOjW8SnUicacPmed/nKFq2CldV0CZNQW14CffBbyAS3bnVS1ORhSHE
      DT8n8uURC5ZimuR/+Zu4fb0oZgj3hh+hpLqwB7sRRgj7pR+gNr6OqxnokeGNrkdDGWxEPv1B
      UDQMb4bNBweISYXSSJADDXFuvawSIV1+9cxh1lQEWbejhSV1BZQENVT3ZErIvqYofVnJJQEd
      6boMxB0KIjora/1s73GIeCSNnSdTtUXzBuSUGxD+XGICM9VHe1svqSOHub62lD5rkPg7bmT/
      YJzw1TfS2DFAXWkek+ctv8A38sbCf+NNRH/8A9xR5ZJOhNB9xy1iZulwEI+eUwVV/0Qn1R+G
      76Zbybv9HRfj0ucEaWfQO5+DhnXYiglu5nhnCOni6CaKv3Tc3PSK6UFEikDTUFUf+EOQ8qDk
      50NzOyBRfGpuUyo5voEU0gUnCwgK/BodfRb1qyppK4ohgD37ugkVeMlGE3hNnSEXij0eZDJ+
      kumyO2bR3JGirTLA/Aov+wct6iM6W1uSLJ4SJp60wEkwEqs3/NyaB3EsY4SUKFe9h9qqdjJb
      N7D3vj9SPWsB7kc/x8oFc9nc1E1JfoihhGR2+M+nNCqAGghS9K/fZvB798GZyJenwBgB8E4N
      kWlP57yaigBNhey5kdVCn/oM+e9+/ync4sd03YtjbRijEkkJT98LnTlTrCJtXKGiyJFNo7Ac
      3GgTzkufQ8uvgZl3Ijz5yP6DcPRpqL0OCqYdP16vmoSVacf1OUglhOGX4Fqo0sHJakhDII4/
      o0vXkI1tuzy69ghlU0vp6U+BUDm0vYVJlTqaK4mls4jhtqly7IZ21ewi5tfZKNJhV4fD0hov
      PQmH6RUBVKBnMM3U8ryTelNkY8g9jyBWfgaEQKlbwGVFkxl86hHyfvgLtEm1OYGVkuumHDu7
      csLewxsJz4JFlPzwfob+61+O/8/v08lkHWzbRQBCEbju+PusMXWCMz/7CgiFzEtPInBRNcnA
      /gx27/gRUcIfwJg9BzeTwdq9E7W0jMo/vjSRz3fecJMDiJ+/Hdd2eGhPkjXVGnu70yyqzSeo
      S55+tYfLLilBmkFePNLJLQuKIFgJVVdAtBHa1uO4GmpSgfJ5EOsCBOmyctTnn0GdFARF4loq
      ajYFCJxwMZo9BCeoM3Y4gl4bxrEFHGhGZHIrka150AwHicDJ5lK/q9b5zWQnQubXIK6/D6GM
      zHFWcyP6n1EhvHOB29mIUloDwD2P78KjK2xqHSYVCkgkLLLjZM4bWye4eiYOAsP79HFSW2iK
      B6fOT6orS6Yphj5tOuHPfhE1EsE6ehjfmrfkaLDJBJ3veDvW0SPodaePNLoYkI6TS78tJcI0
      EbsfxVEMtjX3UBEQ7GlNoBmC7rhNMKwzpcCDhWR/YzclvuFZMNYKex8E16V5wMKv2nS2RpmV
      GgQp2dHvYXa8B6fQS088Q3mejqLbOKoXJ2qhzvkIZA/Brl+ObVw8hd0AIpkcdpqRW430Yc4N
      EhE0EcVe7AEbpXcIxbWPW95cwwNSIKz0mBXstEgPjo0BsO2/2MGPlMcHP0BVyEtfKjvGr+Hz
      6XglZLMOqbRN0NT45Kr6sVZMddoSxO71KO/9Bpg5HVJTHUwjS16VggiYFP/4AbzLLsGYPAX/
      NdchhMjVbAoE8SxYRPLFF5DJxBuf5EhRhlOcqAx1HCEamEyiZD6KArubhzC9GllXkE5n6YlZ
      bGqJsastgbActh+NkRk1OWw/PMiBzgRbGhP09qfIkrtGqTHElor3sTXmp6FrhCmqKjZGWKA2
      /gqm3Yxc+F7Ir0UW5uKiNSuJG02iZHI8JFv3gldHGZUKUs2kadvRScOgzcYBm40JH251AQ0Z
      jT/t7aQvleGFg1G64mdWSaVQYNnHEepwTiT7zZeUdkJxgrq9oiZMdzzLB5ZUcSyXgxACRRF4
      PBqaKvjmDTP463nlY2uEiWAYMWkGdDWh1M1F7h3JfCyQeMo86Ne8E8XjYzwYs3NZwLSCAtD1
      N5RNKIRACEHGskgPtmNs/x6eTDtlVRGW1uYzKahSV+ilOGjgN1Xm1uVRk2dQXlHAshn5DNNv
      cLMWa/dHaRvMUhbQSA6lqSjy0xXNUFfs4/DRI7TnL6fr8BYWTMo5Y17Y2U3zkE3I6uXR365l
      3p1fQnor+cXGPsxpV5B1DZ5sEMxbcgVyqA3FTiF1FWVUMKRr2+xtGiCRdOlt6yXs0SkGPG6W
      hu4EMdvGtgSu61CaZ4CUbGuIUhAyaeqIYysqfkOhozfJQGQBeQvvYMu2XZSVl+bCD1U1Nymd
      uDcb739/5qjJ91ESMDjQm6Au7ONQ31ivsWlqvGNeBYV+42QrkFpSjezvRF1yDaTiOE//aOS7
      /ALU/PF5PG4yDt1tmJXlCJ8fECfZ6S82XNcllUohBo7it3oAsMNVqMtqcPceQTQ2nbRhVOIJ
      7FBhjqasCoRQeOflFTT3pojFXboTGaykxaxyHy/tH2DRZEH4zrtorUxA/3oAqiMedjQmMaeE
      qA60kv3lh5H9TVRHYzR1vYOW7mIy/kLE4r/HrVqBu/2/UJNjTXftPSmSWYfORJJrZxaz/UgM
      vUgwKPxMLYjzYnuat84pYueRAVwEW/YNMAT0d8fZ1JHmyjwfUtE5HFhONriKgy88hxkszXmj
      xfFp8ORO+wsb/MdwSVWYlmiaFdVhXAnPHOo5/p0ApkRyUXtjVoDctwKlqBKh6ajTFmNvfBJS
      w8u966CuvhOh5ZZWt68D55XHEZFyZF8vBII4O7eQffmPKD4/SjiSWwXeoE4ean4du20H/uZn
      0azh7AWmgVJeglISwQ0XQFfvcR6/4/MipxSiFagoQQ2p6giPhotGviEIh3zU+A08HgNVM6gt
      DmBqKvQ3EFr+t3AolwCscyBN3IF8HbY3RSkJxEnq0JtIEQj6uek9X8DvNyguLkUJFOecVa6L
      SI5ENOUFTepKfFRHPPRFM1Su+SDp6uuxbJeO7iPcMDvMnpYhFk0rxe6HPWubWJafz1qnhjnL
      5tLmWULV2/4PgzKPA83d+P1+lk4OsXfQT3n+WXhM30BI20YmEqBpF22CVIRgVkmQkEdnbkmQ
      3+7pxDkW5wBcP62IoKmNIwCjIQTO7vXQ0wpAdzTB5oY2QjMW8Nqrr6L8/sf4dvyB/aVzaHM9
      SGGxI64wac1bkJvWIcsrcXY/xvNPPYFZMYuDr/2eRLCeiF9j9/bX2Lx1Nz6fxrbNr9ARlVSV
      XRhL1Bw8iG/bd0YGPyB1E6Uix0VS/B5kaTFuNIkMGij1eSjGiHBKKVCljWIIpNfETYKeiKNI
      Z8yPyMYQy/4eVB06d1CU72FqqY88n86c6gJ8AS+BgEltRZjKW/8ToWgUj8q/IwqmoUxahTzw
      8CizKSAUTI+HyIoPkjf7VvxF1QQnzaciuwclG6UUHTlg46tUKPJ72Fr/di5/+1/TvO8AVVe9
      B8e2ScajVNZOY2plETsOd7N47lS0NxnBUygKGAbZ3bvQSk5ff/iC7jP8W1cVXjjay+Bw2VQ3
      HWX/jh1cOrXsDAIAqIuvRZm+DAyTzsbDDO7bRv/6Z0lsX0tb9yEmr3knW2NZjjR34FVdurs6
      qJg2h8C8BSikaN53mNC8yxnqbGNakZcOtZyyPI2u9laSvYfQai7DSPcxe/589DPlt3ez/PbX
      jxP2ufRJH0f37aWstITO5oNs3neEeG8rvsE9uWiu4VMcoaFMKh9xgJk6lIRQzOTJ6rAljltZ
      hJAQt1BSJ3POXUWCN4uYdgdOqgclkMYNBKGuGqW2HGmEUEuXI5b8A8I8BWlLCGT7q4jMqGCU
      UC3i0i8jypaOHKYaOXtCvBW7M4boHEQOptHCAWoqy/HPWMWkBVcQDofx+/2UlFVSHAmjPPgd
      6pcuRy94Y6jn54pcfd+LN/hHQxGCayYXsrgiRDRts2/TRppjSZ7Y0XRmARCKilJYjjr3crIz
      l9MrNApW301m/0uUTTJRvRJP917c5ABqUTWGcNBKplIYMBCGn7zKKjbtOEiotJLmhoO0Rh2K
      giaaIulNGiydU8XAoEVFaeHpmgHA2qd+y+GWLvKKIuzbuw+vL0RVeT6/euhROjvaSA9uo7+v
      EStYSMGUatyiEkQ4hBL05ypBptK4mSwkBxDO2IHt2BqqnRn1t4LoTSDGsaDIsB9X6UHk1aOW
      VSO0FpT8QC6PTmAuav17EWXLR7yxp4C0koieHBlNFs1DXPY1hHecARsoRdTfiNu5D6XxMGQc
      ZMJCKYnhbGlGW3rtcMj2iERnf/cz9JvuHpeIeHjfDnbuPYBJlrUbtxKNZaksK+QPTzzKzoNN
      aE6CJ377WypmLMJvvMmWj/OEoSqU53m4ZnIRC8I2mYzNlSXmWEfYuUA6Fm7TZtzW1+HAU6iB
      QpS/+dnJx0mZm31HvRw5zCQ9H/75wd17CeZ72HO4mYJIKVWlhRQVFbJnzw7c7q207HiM+fOK
      KZ02FSEkW7Y0IA0TY6CNxo4Y11xehRVNs/XAADUVAZraB9E9HhbWleJVRirK2AMOWscJlSul
      y33PtfJ371rA7oMtpEOlrFz9Tv604UVS3llcv+Yt/Of/PM0nP/yB3PHi9FYwmU0gn74LIW2o
      vByx9NPjHcWxxdza8xjuuueQbgdGqcRFIbvRxvevT5x0VuaFx5FCoC9YgRoeK1Rrn34K3W/S
      1TTE1XffxuHXtrBo6UJeXvssR7qivPvOO9i4cSPLl196xvfx544zrgCnglBUlHAVavUSpK1g
      d7SjLRgJeJHpJPbLj5B66VHkoZ0IfxBheJCJIcikc6bU8xCASHERwbwwdTU1lJUU4vfnTLLF
      xaUUltdTk9dJSO/GicdwpULGgbajLVwyOY++gTSTCoNoSPLULL0Ji8VVXnriDhV+FZSRJjmq
      gdKfE4hjrfxjU4aeaBbL79LQmyFuKczwJogW3UjAhM1rf09iqJNPkYOQAAANw0lEQVSamZcR
      8J2ZVyNUA5nsQUSPICtXIQrHYc+6Lgw7xGSsDWXJbTBzNfLoi2S396HNuBJt/sqxp8SjqPUz
      cY7uw2k9ij55bEpBXXfp7h9ixpxp7Ni0laJJtQjXwrHS5IVLCalpjMJ6Qv6//HoI570CjIaM
      D5F98n5sxUQvKMH1eFH7G7Ce+Qlu2WyU/VtzBxpmrnDC5HkYn/0+mndi8m2OaYsdx97/Lwir
      H+lkiMdt1u/o4tIiH829WWbPK6Gnb4iulMX86gCv7epl4axixJCDkqciFBdHGqjCwo7pqEV+
      ZCwNQS+KV2Hfji7qq1XMbJrdXbnQxKMtQ6RxuXJOhL2pucy65nNn396BQ8hN/4ZT8Da0uZcj
      zBPUplF2emvTE6g1c1GKa7D3bUHYFuqc0QxOiXQlMtqHEi4is2szTnsTniWrUAqKTnnd/59x
      3ivAaAjDRJtzCftaWumI23Qf2sG+R35ChV9FDA2wrTtBUIXXumMkbJeiRA/WxmfRlqxG8U1M
      HYDjbVEMFE8xMroL15U0NnZRWRXCzEhqPA5R28U1FFo7YqimRlm+H9MGNZvG9XpBUdHEcF4d
      UyB8XrSQcdxaVBBU0R0LVI3ikEbAo1BV4qWiuADFzKNk5ZdzeUhOgOtk2bh5O3lelVc3bcHC
      IJIfpKm1i57IVeS//ieaDx4gPHvRyQ8lc6uAyCvC2vAIyqRZ9Fkum9v7CRdX0N+8l96Ml3DQ
      w661T9KY0gl5JLueX0fRcw+gzl+OUjh6w3mGwT9aOE4rKOdfzPrNggnd4bze2U3FqmtZcMs7
      MIWDBiQzSaaVedjuGFxe5CVuObiGByXaRfLzt5O69zb6Gw7hTKC7XuTNRZ32BdRAPTMWLKd6
      +rXkVS+DJfeQf92PKbvxN6xafR3lpZMIWVm0dBJXVdFUC0Xa2I6GlAIccPvjWJlhTUQAroaT
      HXnpDjoOGrrIImruAHV81cexLOoKBYd7BCsWzWAwnqNFFJRUcPTQPhLLr+X51DgqhxAgFJyd
      jyKcBFgamW9+gPbuDnAchJuiobWJ9o4hkjvX0/Dvn6Z13bOgenEnz8L71fvRps458aJn6EAx
      /ueTlIWzHPxuhubWLnZtfY2XXnolF7ovXXZs34Eroa3hIM2d/zs1GCYwHsDlnX/7ftb+8QUK
      ygwUVUMAhpBs7EmxojzMnoYY02ZMQjczOHEF4gnsrgRDrUcx1v2MwN1fO+NdzhbCU4w2/d7j
      fys1Y79XZn0a4WSx9ftRGn+P6lhk4j6E42JoKSRKLi8QQFec367r4LpFJby8qYdZhSplVWG2
      HBrgqISVk/00Kpey/LKVp6wipnv8HGwbpLC0lG27mlh8aW6DGe/vJunqbN53CCsxQFdfjJLI
      CauiEFA2F/ncVxHTb0c+cT8VJVVMrknxzO/+RH5+jNZHvs68zBbM2WUYU2ccj/9VS3LpZ6Rj
      HecGnX+nnh+NYtvmLfSlFdasWs6rGzeiSsnuba9ROqmWV9e/wIGmfq68GAmSzwIXJgBjOsDh
      tXUbKDCytP78W8wv9jOYSNObdcAw6dBUgqVhwlomx3Q0FYTHRFFdyh7/IqgaTncTanH1aW95
      ocgmBnhly+tI12FwMIXas5Mbqr3s2NVPbLCHggKD7oxDJBJk/qTcHqWxdRBdaDS83oYlFLqj
      NlXBGEurfciUYJe1FF/xPPpjNqXB8QdZYqAH1xEUlRQQ9Lg5Pn9PL52dnRRHCli57GpmtDSe
      PPiHoUTqsOfejvbyvyJvvREz2c2ebp23ra4l/eR9JPL3E/N6mS1cEiX5HHnhAZI9cfraignn
      +cHJIsKTJrYzj1V2PI0QuOkB9h5uZTCR5solUxDeAhQhSDuCwsJCjiQ6qZx2KY1H9lNTMX6l
      mIuJCzCD2pAcRATH2u/tn38cjm7CMv2IWAp64kiPiWqcvoq5a/qhoAJ1+nLUmStRauefT7PO
      Cq/+6Q+4vkJiPd30bv4h71im8dSGNryZLLKoAF2xsFy4ek7u2Y62Rnn21QGWTg7S2BanzK8w
      tdBDZ9Rm0oe+zaEjSYaGBqlZdA31xedSsPfcdGgnHcPd+CPUg88g1/wTyqTFkIkhf/0ehJXI
      XbFmBSz/APbhlxHFM9BKp+Mm+lB8YeyWbagNLyEv/TDCtRHe0MmExXPdHJ/l8c3Nrei4FFVN
      It7bi+lXWb9hC4tXXMHhHa8QLKllev0EC+hZYEKsQKOReeyriANrUUIGQnFxE5LMABipc8h/
      rxmImZdBpBK1dh7KzImrLp4Y6GHzzj0E80uQyW5EooGytt8R6+qnKe5SPyVEU9sQ0+silOUd
      Kxmr4CQFRipHsXBcFZG2UVZ9AjHt2glr25kgpcSN9yJ+92FwLOSlH0KZtAR5dB00bYSeg3DF
      P0A6irvzUZTVn0MES3CiHYjMECJYTOcfvse+qMbs9CZ2dTlUX349kxdcwe7GOFk9yKI501m/
      bi0rLrvqePKBC2gxb/ZN8sQKgOtg/fetKG4aRXGRCKxeGzeaHjfo+2yhLLsV5bI7UErrJqyp
      o5F+/acozc+haC6qGL+ddtRFs0Yqw9iBSeg3f/+4jf5kXLyXL6PtyOe/Bld+BqWgZvifEuna
      CFVDxntwOnYjNBO15tIxFh072c+LTz5MfqqfjtcfobAywvLZebzcO4Ns0TKmFilsfP0gt7/z
      /aAaCOVC9g1n6IM3gSl2Yv3ciop66btQlJy6Y6cUxED8ggY/gPvaY7jrfzURLRwX5rQb0fIF
      +DVcBI5m4Iqx2yOhj+0q1Ylz+gF+8V6sCJUjbv0u8uBzuBv+C3fdd3B3Pw5OLopPBIrRJl+B
      WrsCiUSmYyBdpJ0haWssXLaIg04VU2fOIh5PIxWT0swOWnf/ic4Bi764TfeQi0xHcTPxnLp7
      fi09w9f/+6vDhGeFUObcgjz8InTvRTEkjqaB4w5nYTDOO+ZVlJ2+mNqFQHiKkJ4i1HQXrj+X
      w9PJqCjDplknK5BDaWxFx3Yy7OxIURuWdB9qYPbU3Kq0f9s6Cqdfxu4NT1NWN5dp9VUXrb2Q
      Y1Sql7wPAJkaRCZ6ob8BF4G0s5COIkpmkGrfhq/2EkAgNBPhDrG/C26/6zZ2bq9j0aJD9Abq
      UKtCXNv2a0rn1jJ94aWE8n1AADebxIl1o5h+FG/otG2aUEhJzl9xcblIFyEtioC5t8Hze1FV
      F7XWTzYOhD3oGrg7z72qh1h6C+qlZ1mm5xzQ3dbInr070AP1WIdUBrt7uGVZEc+saya/qIBS
      RbKvsZ9p0yqoz6RwVY1NMcAWGEGDgYPrYXI16VgvzQ37EVXz6O5Oc5E0tVNCePMR3vzcZwAk
      MptT13z1VyK0XDxAurEJPZ3m0qWLEQIWXrICu38mzuAgxXW1yKkzkYl28gLDJZWEQDH9CMMH
      xxLzHtOYT5i99+/cRmfcYfmcOjZu282iZSsJGjbr/rSB8smzsKJtJPGxcPb0s3woARO6Ox0f
      F0W8RN3lyLKRlOd6UEHN11ECCmJOKUT8yLNd/sqmoN30iYuyXEYKIwwNZaiszKdAtnH14pzV
      p6rET1NblIJsBk/SolJaOJqOi8tAymJnX5JQoYGQCVBUmppaSCcTHH3hv1l93SpaGg9MeFvP
      DQJh+HI/mom0LNxUms5PfYbGG27m8PKVZBqbAEhu2crgAw/mzlJ1lLzqXCaJURtgIQRCP31Q
      TWdPJwLYsOFVFOmQsWyGjm4jWL+YhgM7iSYtrOQ5FgJ8A1Ski7O+CIFYeCdHeh0e2dlPQ2+K
      P+zqRgAH+6K8nM2wtT/D+pYYzzWfXIZozKWKJiFOEYN8oejs6CRUEMFufRFFDBFQBT2DGTK2
      S0gIdhzoQcElOxRDmiaiLMyNy8u584pJHGgcwBpspb29l7o5C3nL5XO5PG8LbdufZdHSlWe+
      +RuEwd8+xqFFl9Dxmc+R3roNHAfF40EZJhHKZILBXz9M9PEnz+p60rWRmSFeW/8SLV39vL75
      FfYeamLmnMW4XU1sPdTIrLkz+M2DD5NXu4hs6w6SlkI6kyGTyaXX6W4+ytqXXmIwmT5+HaRk
      z/bNbNi0nZYj+1n7wjqyp7ecTwguSmY4AFlYyx/8N+DKZ6kq8dLRkwv88GuQtlzyZpUSPNRL
      uXP6NB/CO7FcodGoqJlCRc0UrJ33oxT6kQmLiKlTOLMIu0ZBNPtRXQs7ARztwSkJo9YEyfdp
      5F92O9Om/A3CCOJu/TqiZxua4WfOVe9AXGS99WzR96Mf0/ud7yITCWJPjtRItpqaabzuJoo+
      9xniz69FplJEH/0doZvPnBdUqDrtWzfRnNQpSPeSdfLJ9HUTGRiiO5ZgVmUhW3Y1M7uujJ6h
      LKpmsubqlSR6W0mSE7r2nk5wHLp2b6Y5CQWpNNJ1mD5nHi+8tI52WyUd62Yg5VLiv7h9edGu
      rnjCfOjjn+bKD36H/R0RjrQlaO/PYqsqXlVH646ya8ghaZ9ezMXc1Rericeh5U1HaRlANA2i
      NPTh7o/C/h5IZLAGXZRYAiElIpVBEQpi9gdRZr0fYRwTzuFuDNWfevC/wWli0nv3HR/848Hp
      66Pz0/cSf/YPAKRefY3Urt2nv+jwMxjhIibXT6W7pYV0Ok46naZ4xkIiZaXMqSuncvpcdNNH
      UTjAoqXL8OoKhWWTmFSWUzErqyazdF4VBw8PMHnyDLpbGxCqxqvr13HpZVcQS2SYU1tGbzxz
      0fvt/wFhdbYD+0pgTQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='LifeExpectancy_1900s' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='LifeExpectancy_2000s ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Underdeveloped_Countries ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
